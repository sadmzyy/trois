import{toRef as Y1,watch as x,ref as Tt,defineComponent as m,watchEffect as Bt,inject as a1,provide as zt,getCurrentInstance as $t,onUnmounted as Rt,createApp as _t}from"vue";import*as c from"three";import{Vector3 as c1,Raycaster as kt,Plane as Dt,Vector2 as Z,InstancedMesh as l1,Mesh as z1,WebGLRenderer as Ft,Material as Z1,Matrix4 as J1,Color as d1,MeshStandardMaterial as Q1,MeshPhongMaterial as ee,MeshBasicMaterial as $1,LineBasicMaterial as Ut,MeshLambertMaterial as te,DoubleSide as re,OrthographicCamera as Vt,PerspectiveCamera as Xt,Scene as Ht,Texture as Wt,Group as Kt,WebGLCubeRenderTarget as qt,RGBAFormat as Yt,LinearMipmapLinearFilter as Zt,CubeCamera as Jt,BufferGeometry as Qt,BufferAttribute as e3,BoxGeometry as ie,CircleGeometry as t3,ConeGeometry as r3,CylinderGeometry as i3,DodecahedronGeometry as s3,ExtrudeGeometry as n3,IcosahedronGeometry as o3,LatheGeometry as a3,OctahedronGeometry as c3,PlaneGeometry as se,PolyhedronGeometry as l3,RingGeometry as d3,SphereGeometry as h3,ShapeGeometry as u3,TetrahedronGeometry as m3,TorusGeometry as p3,TorusKnotGeometry as f3,CatmullRomCurve3 as ne,Curve as y3,TubeGeometry as g3,SpotLight as R1,DirectionalLight as _1,AmbientLight as b3,HemisphereLight as v3,PointLight as x3,RectAreaLight as w3,MeshPhysicalMaterial as S3,PointsMaterial as O3,ShadowMaterial as M3,MeshToonMaterial as P3,TextureLoader as x1,MeshMatcapMaterial as C3,ShaderMaterial as k1,ShaderChunk as h1,UniformsUtils as oe,ShaderLib as E3,CubeReflectionMapping as j3,CubeTextureLoader as L3,VideoTexture as N3,SpriteMaterial as I3,Sprite as G3,Points as A3}from"three";import*as w1 from"@tweenjs/tween.js";import{OrbitControls as T3}from"three/examples/jsm/controls/OrbitControls.js";import{FontLoader as ae}from"three/examples/jsm/loaders/FontLoader.js";import{TextGeometry as ce}from"three/examples/jsm/geometries/TextGeometry.js";import{RectAreaLightUniformsLib as B3}from"three/examples/jsm/lights/RectAreaLightUniformsLib.js";import{RectAreaLightHelper as z3}from"three/examples/jsm/helpers/RectAreaLightHelper.js";import{GLTFLoader as $3}from"three/examples/jsm/loaders/GLTFLoader.js";import{DRACOLoader as R3}from"three/examples/jsm/loaders/DRACOLoader.js";import{FBXLoader as _3}from"three/examples/jsm/loaders/FBXLoader.js";import{EffectComposer as k3}from"three/examples/jsm/postprocessing/EffectComposer.js";import{RenderPass as D3}from"three/examples/jsm/postprocessing/RenderPass.js";import{BokehPass as F3}from"three/examples/jsm/postprocessing/BokehPass.js";import{FilmPass as U3}from"three/examples/jsm/postprocessing/FilmPass.js";import{ShaderPass as P1}from"three/examples/jsm/postprocessing/ShaderPass.js";import{FXAAShader as V3}from"three/examples/jsm/shaders/FXAAShader.js";import{HalftonePass as X3}from"three/examples/jsm/postprocessing/HalftonePass.js";import{SMAAPass as H3}from"three/examples/jsm/postprocessing/SMAAPass.js";import{SSAOPass as W3}from"three/examples/jsm/postprocessing/SSAOPass.js";import{UnrealBloomPass as K3}from"three/examples/jsm/postprocessing/UnrealBloomPass.js";import"three/examples/jsm/renderers/CSS2DRenderer.js";import{DRACOExporter as q3}from"three/examples/jsm/exporters/DRACOExporter.js";import{OBJExporter as Y3}from"three/examples/jsm/exporters/OBJExporter.js";import{SimplifyModifier as Z3}from"three/examples/jsm/modifiers/SimplifyModifier.js";function u1(e,t,r){t instanceof Object&&Object.entries(t).forEach(([i,s])=>{r?r(e,i,s):e[i]=s})}function J(e,t,r,i=!0,s){i&&u1(r,e[t],s);const o=Y1(e,t);return x(o,n=>{u1(r,n,s)})}function le(e,t,r=!0,i){r&&u1(t,e,i);const s=Tt(e);return x(s,o=>{u1(t,o,i)},{deep:!0})}function m1(e,t){t instanceof Object&&Object.entries(t).forEach(([r,i])=>{e[r]=i})}function de(e,t,r){t.forEach(i=>{P(e,i,r,i)})}function P(e,t,r,i){const s=i||t,o=Y1(e,t);o.value instanceof Object?(m1(r[s],o.value),x(o,n=>{m1(r[s],n)},{deep:!0})):(o.value!==void 0&&(r[s]=e[t]),x(o,n=>{r[s]=n}))}function S1(e,t=[]){const r={};return Object.entries(e).forEach(([i,s])=>{(!t||!t.includes(i))&&(r[i]=s)}),r}function he(e,t,r){return r=r<0?0:r,r=r>1?1:r,e+(t-e)*r}function ue(e,t,r){return e<t?t:e>r?r:e}const J3="https://rawcdn.githack.com/emmelleppi/matcaps/9b36ccaaf0a24881a39062d05566c9e92be4aa0d",Q3="0404E8_0404B5_0404CB_3333FC";function D1(e=Q3,t=1024){const r=`${e}${er(t)}.png`;return`${J3}/${t}/${r}`}function er(e){switch(e){case 64:return"-64px";case 128:return"-128px";case 256:return"-256px";case 512:return"-512px";default:return""}}const me=class{constructor(e,t,r=void 0,i=me.DEFAULT_SCALE){this.explodedTimes=0,this.isExplodeUp=!1,this.scene=e,this.objectId=t,t||console.log(`[EXP] Invalid objectId: ${t}`),this.scale=i,i<=0&&console.log(`[EXP] Invalid scale: ${i}`),r?this.position=r:(this.position=new c.Vector3,this.getObjectCenter(this.position))}explode(){if(!this.objectId||!this.position||!this.scale){console.log(`[EXP] Invalid objectId: ${this.objectId}, or position: ${this.position}, or this.power: ${this.scale}`);return}const e=this.scene.getObjectById(this.objectId);if(!e||!e.children){console.log("[EXP] No children to explode!");return}console.log(`[EXP] Exploding ${e.name} at: ${this.position.x}, ${this.position.y}, ${this.position.z}`),e.children.forEach(t=>{if(t instanceof c.InstancedMesh){const r=new c.Matrix4,i=new c.Vector3,s=new c.Quaternion,o=new c.Vector3;for(let n=0;n<t.count;++n){if(t.getMatrixAt(n,r),r.decompose(i,s,o),this.isExplodeUp){const a=(i.z-this.position.z)*this.scale;i.setZ(i.z+a)}else{const a=i.clone().sub(this.position);i.addScaledVector(a,this.scale)}r.setPosition(i),t.setMatrixAt(n,r)}t.matrixWorldNeedsUpdate=!0,t.instanceMatrix.needsUpdate=!0}else{const r=t.position.clone();if(this.isExplodeUp){const i=(r.z-this.position.z)*this.scale;t.position.setZ(r.z+i)}else{const i=r.sub(this.position);t.position.addScaledVector(i,this.scale)}}t.updateMatrix()}),this.explodedTimes++}unexplode(){const e=this.scene.getObjectById(this.objectId);if(!e||!e.children){console.log("[EXP] No children to explode!");return}console.log(`[EXP] Unexploding ${e.name} at: ${this.position.x}, ${this.position.y}, ${this.position.z}`);for(let t=this.explodedTimes;t>0;--t)e.children.forEach(r=>{if(r instanceof c.InstancedMesh){const i=new c.Matrix4,s=new c.Vector3,o=new c.Quaternion,n=new c.Vector3,a=this.scale/(1+this.scale);for(let h=0;h<r.count;++h){if(r.getMatrixAt(h,i),i.decompose(s,o,n),this.isExplodeUp){const l=(s.z-this.position.z)*a;s.setZ(s.z-l)}else{const l=s.clone().sub(this.position);l.x*=a,l.y*=a,l.z*=a,s.sub(l)}i.setPosition(s),r.setMatrixAt(h,i)}r.matrixWorldNeedsUpdate=!0,r.instanceMatrix.needsUpdate=!0}else{const i=r.position.clone(),s=this.scale/(1+this.scale);if(this.isExplodeUp){const o=(i.z-this.position.z)*s;r.position.setZ(i.z-o)}else{const o=i.sub(this.position);o.x*=s,o.y*=s,o.z*=s,r.position.sub(o)}}r.updateMatrix()})}setOnlyExplodeUp(e){this.isExplodeUp=e}getObjectCenter(e){const t=new c.Box3;if(!this.objectId){console.log(`[EXP] Invalid objectId: ${this.objectId}`);return}const r=this.scene.getObjectById(this.objectId);if(!r||!r.children){console.log("[EXP] No children to explode!");return}r.traverse(i=>{t.expandByObject(i)}),t.getCenter(e)}};let F1=me;F1.DEFAULT_SCALE=1;class ${static getVisibleObjectBoundingBox(t){const r=new c.Box3;return t.traverseVisible(i=>{i instanceof c.Mesh&&i.userData.selectable!==!1&&r.expandByObject(i)}),r}static getObjectsBoundingBox(t,r){const i=new c.Box3;return r.forEach(s=>{const o=t.getObjectByProperty("uuid",s);if(o){const n=$.getBoundingBox(o);n.isEmpty()||i.union(n)}}),i}static getBoundingBox(t,r=!0){const i=new c.Box3;if(t instanceof c.InstancedMesh)return $.getInstancedMeshBoundingBox(t);if(t.children.length===0)return i.expandByObject(t),i;const s=t.children.length;let o=1;s>20&&(o=3),s>100&&(o=5),s>200&&(o=10),s>1e3&&(o=100),t.updateMatrixWorld(!1);for(let n=0;n<s;++n){const a=t.children[n];if(!r||n%o===0)if(a.updateMatrix(),a instanceof c.InstancedMesh){const h=$.getInstancedMeshBoundingBox(a);i.union(h)}else i.expandByObject(a)}return i}static getInstancedMeshBoundingBox(t){const r=new c.Box3,i=new c.Matrix4;for(let s=0;s<t.count;++s){t.getMatrixAt(s,i);const o=t.geometry.clone();if(o.boundingBox){const n=o.boundingBox.applyMatrix4(i);!n.isEmpty()&&!isNaN(n.min.x)&&!isNaN(n.min.y)&&!isNaN(n.min.z)&&!isNaN(n.max.x)&&!isNaN(n.max.y)&&!isNaN(n.max.z)&&r.union(n)}}return r.applyMatrix4(t.matrixWorld),r}static explodeObject(t,r,i,s=!1){i[t.id]&&i[t.id].unexplode();const o=new c.Vector3;$.getPositionCenter(t,o);const n=new F1(r,t.id,o);n.setOnlyExplodeUp(s),n.explode(),i[t.id]=n}static explodeObjects(t,r,i,s=!1){return t.traverse(o=>{i.find(n=>n===o.uuid)&&(o.children&&o.children.length===1?$.explodeObject(o.children[0],t,r,s):$.explodeObject(o,t,r,s))}),r}static unexplodeObjects(t,r){t.traverse(i=>{const s=r[i.id];s&&(s.unexplode(),delete r[i.id])})}static getPositionCenter(t,r){const i=$.getBoundingBox(t);i.getCenter(r),r.y=i.min.y}}var pe=(e=>(e.Top="Top",e.Bottom="Bottom",e.Front="Front",e.Back="Back",e.Left="Left",e.Right="Right",e))(pe||{});const O1=class{static getCameraPositionByView(e,t,r,i){const s=$.getVisibleObjectBoundingBox(e);O1.getCameraPositionByBboxAndView(s,t,r,i)}static getCameraPositionByObjectUuids(e,t,r,i,s){const o=$.getObjectsBoundingBox(e,t);O1.getCameraPositionByBboxAndView(o,r,i,s)}static getCameraPositionByObjects(e,t,r,i){const s=new c.Box3;e.forEach(o=>{const n=$.getBoundingBox(o);s.union(n)}),O1.getCameraPositionByBboxAndCamera(s,t,r,i)}static getCameraPositionByBboxAndCamera(e,t,r,i){if(e.isEmpty())return;const s=1.2;let o=e.max.x-e.min.x+(e.max.y-e.min.y)+(e.max.z-e.min.z);o*=s;const n=new c.Vector3(o,o,o),a=(e.min.x+e.max.x)/2,h=(e.min.y+e.max.y)/2,l=(e.min.z+e.max.z)/2;i.set(a,h,l);const y=new c.Vector3;t.getWorldPosition(y);const b=y.sub(i).normalize().multiply(n).add(i);r.set(b.x,b.y,b.z)}static getCameraPositionByBboxAndView(e,t,r,i){if(e.isEmpty())return;const s=e.max.x-e.min.x+(e.max.y-e.min.y)+(e.max.z-e.min.z),o=(.5+.5/Math.pow(Math.E,s/100))*s;let n=0,a=e.min.y+(e.max.y-e.min.y),h=0;const l=(e.min.x+e.max.x)/2,y=(e.min.y+e.max.y)/2,b=(e.min.z+e.max.z)/2;t==="Top"?a=e.max.y+o:t==="Bottom"?a=e.min.y-o:t==="Front"?(h=e.max.z+o,n=l):t==="Back"?(h=e.min.z-o,n=l):t==="Left"?(n=e.min.x-o,h=b):t==="Right"&&(n=e.max.x+o,h=b),r.x=n,r.y=a,r.z=h,i.x=l,i.y=y,i.z=b}static async sleep(e){return new Promise(t=>{setTimeout(()=>{t("")},e)})}static async twinkle(e,t=500){const r=O1.twinklingObjectUuids;r[e.uuid]||(r[e.uuid]=!0,e.visible=!e.visible,await this.sleep(t),e.visible=!e.visible,await this.sleep(t),e.visible=!e.visible,await this.sleep(t),e.visible=!e.visible,await this.sleep(t),e.visible=!e.visible,await this.sleep(t),e.visible=!e.visible,delete r[e.uuid])}};let U1=O1;U1.twinklingObjectUuids={};function tr(e){const{camera:t,resetPosition:r=new c1(0,0,0)}=e,i=new kt,s=r.clone(),o=new Dt(new c1(0,0,1),0);return{position:s,updatePosition:n=>{i.setFromCamera(n,t),t.getWorldDirection(o.normal),i.ray.intersectPlane(o,s)},intersect:(n,a,h=!1)=>(i.setFromCamera(n,t),i.intersectObjects(a,h))}}function fe(e){const{camera:t,domElement:r,intersectObjects:i,selectedObject:s=void 0,intersectRecursive:o=!1,touch:n=!0,resetOnEnd:a=!1,onEnter:h=()=>{},onMove:l=()=>{},onLeave:y=()=>{},onClick:b=()=>{},onIntersectEnter:B=()=>{},onIntersectOver:j=()=>{},onIntersectMove:t1=()=>{},onIntersectLeave:r1=()=>{},onIntersectClick:K=()=>{},onSelectObject:k,flyToSelectedObject:e1}=e,I=new Z(0,0),L=new Z(0,0),i1=tr({camera:t}),s1=i1.position,G={position:I,positionN:L,positionV3:s1,intersectObjects:i,selectedObject:s,listeners:!1,mouseDoubleClicked:!1,addListeners:Gt,removeListeners:At,intersect:d};return G;function T1(){I.set(0,0),L.set(0,0),s1.set(0,0,0)}function v1(v){let M,w;v.touches&&v.touches.length>0?(M=v.touches[0].clientX,w=v.touches[0].clientY):(M=v.clientX,w=v.clientY);const R=r.getBoundingClientRect();I.x=M-R.left,I.y=w-R.top,L.x=I.x/R.width*2-1,L.y=-(I.y/R.height)*2+1,i1.updatePosition(L)}function d(){const v=W1();if(v.length){const M=i1.intersect(L,v,o),w=[...v],R=[];M.forEach(F=>{var U,q,_;const{object:H}=F,z=O(H);if(H instanceof l1){if(R.indexOf(H)!==-1)return;R.push(H)}if(!H.userData.over){H.userData.over=!0;const B1={type:"pointerover",over:!0,component:z,intersect:F},q1={...B1,type:"pointerenter"};j(B1),B(q1),(U=z==null?void 0:z.onPointerOver)==null||U.call(z,B1),(q=z==null?void 0:z.onPointerEnter)==null||q.call(z,q1)}const K1={type:"pointermove",component:z,intersect:F};t1(K1),(_=z==null?void 0:z.onPointerMove)==null||_.call(z,K1),w.splice(w.indexOf(H),1)}),w.forEach(F=>{var U,q;const _=O(F);if(F.userData.over){F.userData.over=!1;const H={type:"pointerover",over:!1,component:_},z={...H,type:"pointerleave"};j(H),r1(z),(U=_==null?void 0:_.onPointerOver)==null||U.call(_,H),(q=_==null?void 0:_.onPointerLeave)==null||q.call(_,z)}})}}function u(v){v1(v),h({type:"pointerenter",position:I,positionN:L,positionV3:s1})}function f(v){v1(v),l({type:"pointermove",position:I,positionN:L,positionV3:s1}),d()}function g(v){var M;v1(v);const w=W1();if(console.log(w),w.length){const R=i1.intersect(L,w,o),F=X(R),{object:U}=F,q=O(U);if(U instanceof l1)return;const _={type:"click",component:q,intersect:F};K(_),(M=q==null?void 0:q.onClick)==null||M.call(q,_)}b({type:"click",position:I,positionN:L,positionV3:s1})}function A(v){G.mouseDoubleClicked||setTimeout(p(v),200),G.mouseDoubleClicked&&setTimeout(()=>{G.mouseDoubleClicked=!1},200)}function p(v){return()=>{G.mouseDoubleClicked||g(v)}}function S(v){G.mouseDoubleClicked=!0,g(v),e1&&e1()}function D(){a&&T1(),y({type:"pointerleave"})}function X(v){const M=v.find(F=>{const U=F.object;return U.visible&&(U.userData.selectable!==!1||U instanceof z1)});let w=M&&M.object||void 0,R;return w&&(w.userData.selectable===!1?(console.log(`[Viewer] object(type: ${w.type}, name: ${w.name}) not selectable!`),w=void 0):w instanceof l1?(R=M.instanceId,G.selectedObject&&G.selectedObject.uuid===w.uuid&&G.selectedObject.userData.instanceId===R&&(w=void 0)):G.selectedObject&&G.selectedObject.uuid===w.uuid&&(w=void 0)),k&&(w?k({object:w,instanceIdOrFaceIndexId:R,depthTest:void 0}):N()),M}function N(){k&&k({depthTest:void 0})}function O(v){if(v.userData.component)return v.userData.component;let M=v.parent;for(;M;){if(M.userData.component)return M.userData.component;M=M.parent}}function W1(){return typeof i=="function"?i():i}function Gt(){r.addEventListener("mouseenter",u),r.addEventListener("mousemove",f),r.addEventListener("mouseleave",D),r.addEventListener("pointerup",A),r.addEventListener("dblclick",S),n&&(r.addEventListener("touchstart",u),r.addEventListener("touchmove",f),r.addEventListener("touchend",D)),G.listeners=!0}function At(){r.removeEventListener("mouseenter",u),r.removeEventListener("mousemove",f),r.removeEventListener("mouseleave",D),r.removeEventListener("pointerup",A),r.removeEventListener("dblclick",S),r.removeEventListener("touchstart",u),r.removeEventListener("touchmove",f),r.removeEventListener("touchend",D),G.listeners=!1}}function rr(e){const t={antialias:!0,alpha:!1,autoClear:!0,orbitCtrl:!1,pointer:!1,resize:!1,width:300,height:150};e&&Object.entries(e).forEach(([d,u])=>{t[d]=u});const r={width:1,height:1,wWidth:1,wHeight:1,ratio:1},i=[],s=[],o=a(),n={config:t,renderer:o,size:r,init:h,dispose:r1,render:b,renderC:B,setSize:k,addIntersectObject:j,removeIntersectObject:t1};return n;function a(){const d=new Ft({canvas:t.canvas,antialias:t.antialias,alpha:t.alpha,...t.params});return d.autoClear=t.autoClear,d}function h(){if(!n.scene)return console.error("Missing Scene"),!1;if(!n.camera)return console.error("Missing Camera"),!1;if(t.resize?(K(),window.addEventListener("resize",K)):t.width&&t.height&&k(t.width,t.height),l(),t.orbitCtrl){const d=new T3(n.camera,n.renderer.domElement);t.orbitCtrl instanceof Object&&Object.entries(t.orbitCtrl).forEach(([u,f])=>{d[u]=f}),d.listenToKeyEvents(document.body),y(()=>{d.update()}),n.cameraCtrl=d}return!0}function l(){let d={camera:n.camera,domElement:n.renderer.domElement,intersectObjects:s,selectedObject:void 0,onSelectObject:I,flyToSelectedObject:T1};t.pointer&&t.pointer instanceof Object&&(d={...d,...t.pointer});const u=n.pointer=fe(d);(t.pointer||s.length)&&(u.addListeners(),d.intersectMode==="frame"&&y(u.intersect))}function y(d){i.push(d)}function b(){i.forEach(d=>d()),n.renderer.render(n.scene,n.camera)}function B(){i.forEach(d=>d()),n.composer.render()}function j(d){s.indexOf(d)===-1&&s.push(d),n.pointer&&!n.pointer.listeners&&n.pointer.addListeners()}function t1(d){const u=s.indexOf(d);u!==-1&&s.splice(u,1),n.pointer&&!t.pointer&&s.length===0&&n.pointer.removeListeners()}function r1(){window.removeEventListener("resize",K),n.pointer&&n.pointer.removeListeners(),n.cameraCtrl&&n.cameraCtrl.dispose(),n.renderer&&n.renderer.dispose()}function K(){var d;if(t.resize==="window")k(window.innerWidth,window.innerHeight);else{const u=n.renderer.domElement.parentNode;u&&k(u.clientWidth,u.clientHeight)}(d=t.onResize)==null||d.call(t,r)}function k(d,u){r.width=d,r.height=u,r.ratio=d/u,n.renderer.setSize(d,u,!1);const f=n.camera;if(f.type==="PerspectiveCamera"){const g=f;g.aspect=r.ratio,g.updateProjectionMatrix()}if(f.type==="OrthographicCamera"){const g=f;r.wWidth=g.right-g.left,r.wHeight=g.top-g.bottom}else{const g=e1();r.wWidth=g[0],r.wHeight=g[1]}}function e1(){const d=n.camera,u=d.fov*Math.PI/180,f=2*Math.tan(u/2)*Math.abs(d.position.z);return[f*d.aspect,f]}function I(d){var u;const{object:f,instanceIdOrFaceIndexId:g,depthTest:A=void 0}=d;if(console.log("test selectObject",{object:f,instanceIdOrFaceIndexId:g,depthTest:A}),(u=n.pointer)!=null&&u.selectedObject){const p=n.pointer.selectedObject.userData;if(p.instanceId!=null&&p.originalMatrix&&p.clonedMesh){n.scene&&n.scene.remove(p.clonedMesh);const S=n.pointer.selectedObject;if(S.setMatrixAt(p.instanceId,p.originalMatrix),S.instanceMatrix.needsUpdate=!0,S.updateMatrix(),delete p.instanceId,delete p.originalMatrix,f===p.clonedMesh){p.clonedMesh.geometry.dispose(),delete p.clonedMesh,n.pointer.selectedObject=void 0;return}p.clonedMesh.geometry.dispose(),delete p.clonedMesh}else if(p.originalMaterial){if(n.pointer.selectedObject.material){const S=n.pointer.selectedObject.material;Array.isArray(S)?S.forEach(D=>D.dispose()):S instanceof Z1&&S.dispose()}n.pointer.selectedObject.material=p.originalMaterial,delete p.originalMaterial}n.pointer.selectedObject=void 0}if(!(!n.scene||!f))if(f instanceof l1&&g!=null&&n.pointer){const p=f,S=new J1,D=new J1;D.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),p.getMatrixAt(g,S),n.pointer.selectedObject=f;const X=L(f,{depthTest:A});if(X){const N=new z1(p.geometry.clone(),X);N.applyMatrix4(f.matrixWorld.multiply(S)),N.matrixWorldNeedsUpdate=!0,N.name="Cloned mesh for highlighting";const O=S.clone();O.multiplyMatrices(S,D),p.setMatrixAt(g,O),p.instanceMatrix.needsUpdate=!0,p.updateMatrix(),n.pointer.selectedObject.userData.instanceId=g,n.pointer.selectedObject.userData.originalMatrix=S,n.pointer.selectedObject.userData.clonedMesh=N,n.scene.add(N)}}else{const p=L(f,{depthTest:A});p&&(n.pointer.selectedObject=f,n.pointer.selectedObject.userData.originalMaterial=n.pointer.selectedObject.material,n.pointer.selectedObject.material=p)}}function L(d,u={}){if(!d||!d.material)return;const f=d.material;if(Array.isArray(f)&&f.length>0){const g=[];return f.forEach(A=>{g.push(i1(A,u))}),g}else{if(f instanceof Z1)return i1(f,u);console.warn(`Invalid material: ${f}`)}}function i1(d,u={}){const{depthTest:f=void 0,highlightColor:g=new d1(16711935),opacity:A=.7}=u,p=d.clone();return p instanceof Q1||p instanceof ee?(p.emissive.set(g),p.color.set(g)):p instanceof $1||p instanceof Ut||p instanceof te?p.color.set(g):console.error("Unsupported Material: "+(typeof p).toString()),p.opacity=A,p.transparent=!0,f!==void 0&&(p.depthTest=!1,p.side=re),p}function s1(d){if(!d||d.length===0||!n.camera)return;const u=new c1,f=new c1;U1.getCameraPositionByObjects(d,n.camera,u,f),v1(u,f)}function G(d){s1([d])}function T1(){var d;if(!((d=n.pointer)!=null&&d.selectedObject))return;let u=n.pointer.selectedObject;u instanceof l1&&u.userData.clonedMesh&&(u=u.userData.clonedMesh),G(u)}function v1(d,u,f){const g=(()=>{if(n.camera.type==="PerspectiveCamera"||n.camera.type==="OrthographicCamera")return n.camera})(),A=n.cameraCtrl;if(!g||!A)return;if(d.equals(u)){console.error("[Viewer3D] camera position and lookAt cannot be the same!");return}else if(isNaN(d.x)||isNaN(d.y)||isNaN(d.z)||isNaN(u.x)||isNaN(u.y)||isNaN(u.z)){console.error("[Viewer3D] invalid position or lookAt!");return}const p=d.distanceTo(u);p<g.near?(d=d.clone().sub(u).normalize().multiplyScalar(g.near*1.1),console.warn("[Viewer3D] camera could be too close to see the object!")):p>g.far&&(d=d.clone().sub(u).normalize().multiplyScalar(g.far*.9),console.warn("[Viewer3D] camera could be too far to see the object!"));const S=(N,O)=>{O&&g.lookAt(O),N&&g.position.set(N.x,N.y,N.z),O&&A.target.set(O.x,O.y,O.z),A.update()},D=A.target.clone(),X=new w1.Tween(D);X.to(u,500),X.easing(w1.Easing.Sinusoidal.InOut),X.onUpdate(()=>{S(void 0,D)}),X.onComplete(()=>{const N=g.position.clone(),O=new w1.Tween(N);O.to(d,1500),O.easing(w1.Easing.Sinusoidal.InOut),O.onUpdate(()=>{S(N,u)}),O.onComplete(()=>{S(N,u),f&&f()}),n.tween=O,O.start()}),n.tween=X,X.start()}}const W=Symbol("Renderer");var ye=m({name:"Renderer",props:{params:{type:Object,default:()=>({})},antialias:Boolean,alpha:Boolean,autoClear:{type:Boolean,default:!0},orbitCtrl:{type:[Boolean,Object],default:!1},pointer:{type:[Boolean,Object],default:!1},resize:{type:[Boolean,String],default:!1},shadow:Boolean,width:String,height:String,pixelRatio:Number,xr:Boolean,props:{type:Object,default:()=>({})},onReady:Function},inheritAttrs:!1,setup(e,{attrs:t}){const r=[],i=[],s=[],o=[],n=[],a=document.createElement("canvas");Object.entries(t).forEach(([b,B])=>{const j=b.match(/^on([A-Z][a-zA-Z]*)$/);j?a.addEventListener(j[1].toLowerCase(),B):a.setAttribute(b,B)});const h={canvas:a,params:e.params,antialias:e.antialias,alpha:e.alpha,autoClear:e.autoClear,orbitCtrl:e.orbitCtrl,pointer:e.pointer,resize:e.resize};e.width&&(h.width=parseInt(e.width)),e.height&&(h.height=parseInt(e.height));const l=rr(h);J(e,"props",l.renderer),Bt(()=>{e.pixelRatio&&l.renderer.setPixelRatio(e.pixelRatio)});const y=()=>{};return{canvas:a,three:l,renderer:l.renderer,size:l.size,renderFn:y,raf:!0,initCallbacks:r,mountedCallbacks:i,beforeRenderCallbacks:s,afterRenderCallbacks:o,resizeCallbacks:n}},computed:{camera:{get:function(){return this.three.camera},set:function(e){this.three.camera=e}},scene:{get:function(){return this.three.scene},set:function(e){this.three.scene=e}},composer:{get:function(){return this.three.composer},set:function(e){this.three.composer=e}}},provide(){return{[W]:this}},mounted(){var e;this.$el.parentNode.insertBefore(this.canvas,this.$el),this.three.init()&&(this.three.pointer&&(this.$pointer=this.three.pointer),this.three.config.onResize=t=>{this.resizeCallbacks.forEach(r=>r({type:"resize",renderer:this,size:t}))},this.shadow&&(this.renderer.shadowMap.enabled=!0),this.renderFn=this.three.composer?this.three.renderC:this.three.render,this.initCallbacks.forEach(t=>t({type:"init",renderer:this})),(e=this.onReady)==null||e.call(this,this),this.xr?(this.renderer.xr.enabled=!0,this.renderer.setAnimationLoop(this.render)):requestAnimationFrame(this.renderLoop)),this.mountedCallbacks.forEach(t=>t({type:"mounted",renderer:this}))},beforeUnmount(){this.canvas.remove(),this.beforeRenderCallbacks=[],this.afterRenderCallbacks=[],this.raf=!1,this.three.dispose()},methods:{onInit(e){this.addListener("init",e)},onMounted(e){this.addListener("mounted",e)},onBeforeRender(e){this.addListener("beforerender",e)},offBeforeRender(e){this.removeListener("beforerender",e)},onAfterRender(e){this.addListener("afterrender",e)},offAfterRender(e){this.removeListener("afterrender",e)},onResize(e){this.addListener("resize",e)},offResize(e){this.removeListener("resize",e)},addListener(e,t){this.getCallbacks(e).push(t)},removeListener(e,t){const r=this.getCallbacks(e),i=r.indexOf(t);i!==-1&&r.splice(i,1)},getCallbacks(e){return e==="init"?this.initCallbacks:e==="mounted"?this.mountedCallbacks:e==="beforerender"?this.beforeRenderCallbacks:e==="afterrender"?this.afterRenderCallbacks:this.resizeCallbacks},render(e){this.beforeRenderCallbacks.forEach(t=>t({type:"beforerender",renderer:this,time:e})),this.renderFn({renderer:this,time:e}),this.afterRenderCallbacks.forEach(t=>t({type:"afterrender",renderer:this,time:e})),this.three.tween&&w1.update()},renderLoop(e){this.raf&&requestAnimationFrame(this.renderLoop),this.render(e)}},render(){return this.$slots.default?this.$slots.default():[]},__hmrId:"Renderer"}),ge=m({props:{props:{type:Object,default:()=>({})}},render(){return this.$slots.default?this.$slots.default():[]}});function C1(e,t,r,i=!0){e[t]=r,i&&e.updateProjectionMatrix()}var be=m({extends:ge,name:"OrthographicCamera",props:{left:{type:Number,default:-1},right:{type:Number,default:1},top:{type:Number,default:1},bottom:{type:Number,default:-1},near:{type:Number,default:.1},far:{type:Number,default:2e3},zoom:{type:Number,default:1},position:{type:Object,default:()=>({x:0,y:0,z:0})}},setup(e){const t=a1(W);if(!t){console.error("Renderer not found");return}const r=new Vt(e.left,e.right,e.top,e.bottom,e.near,e.far);return t.camera=r,P(e,"position",r),J(e,"props",r,!0,C1),["left","right","top","bottom","near","far","zoom"].forEach(i=>{x(()=>e[i],s=>{C1(r,i,s)})}),{renderer:t,camera:r}},__hmrId:"OrthographicCamera"}),E1=m({extends:ge,name:"PerspectiveCamera",props:{aspect:{type:Number,default:2.049},far:{type:Number,default:3e4},fov:{type:Number,default:50},near:{type:Number,default:.5},position:{type:Object,default:()=>({x:0,y:0,z:0})},lookAt:{type:Object,default:null}},setup(e){var t;const r=a1(W);if(!r){console.error("Renderer not found");return}const i=new Xt(e.fov,e.aspect,e.near,e.far);return r.camera=i,P(e,"position",i),e.lookAt&&i.lookAt((t=e.lookAt.x)!=null?t:0,e.lookAt.y,e.lookAt.z),x(()=>e.lookAt,s=>{var o;i.lookAt((o=s.x)!=null?o:0,s.y,s.z)},{deep:!0}),J(e,"props",i,!0,C1),["aspect","far","fov","near"].forEach(s=>{x(()=>e[s],o=>{C1(i,s,o)})}),{renderer:r,camera:i}},__hmrId:"PerspectiveCamera"});const j1=Symbol("Scene");var ve=m({name:"Scene",props:{background:[String,Number,Object]},setup(e){const t=a1(W),r=new Ht;if(!t){console.error("Renderer not found");return}t.scene=r,zt(j1,r);const i=s=>{!s||(typeof s=="string"||typeof s=="number"?r.background instanceof d1?r.background.set(s):r.background=new d1(s):s instanceof Wt&&(r.background=s))};return i(e.background),x(()=>e.background,i),{scene:r,add:s=>{r.add(s)},remove:s=>{r.remove(s)}}},render(){return this.$slots.default?this.$slots.default():[]},__hmrId:"Scene"});const ir={onPointerEnter:Function,onPointerOver:Function,onPointerMove:Function,onPointerLeave:Function,onPointerDown:Function,onPointerUp:Function,onClick:Function};var Q=m({name:"Object3D",inject:{renderer:W,scene:j1},emits:["created","ready"],props:{position:{type:Object,default:()=>({x:0,y:0,z:0})},rotation:{type:Object,default:()=>({x:0,y:0,z:0})},scale:{type:Object,default:()=>({x:1,y:1,z:1,order:"XYZ"})},lookAt:{type:Object,default:null},userData:{type:Object,default:()=>({})},visible:{type:Boolean,default:!0},props:{type:Object,default:()=>({})},disableAdd:{type:Boolean,default:!1},disableRemove:{type:Boolean,default:!1},...ir},setup(){return{}},created(){this.renderer||console.error("Missing parent Renderer"),this.scene||console.error("Missing parent Scene")},unmounted(){this.disableRemove||this.removeFromParent(),this.o3d&&this.renderer&&this.renderer.three.removeIntersectObject(this.o3d)},methods:{initObject3D(e){var t;this.o3d=e,e.userData.component=this,(this.onPointerEnter||this.onPointerOver||this.onPointerMove||this.onPointerLeave||this.onPointerDown||this.onPointerUp||this.onClick)&&this.renderer&&this.renderer.three.addIntersectObject(e),P(this,"position",e),P(this,"rotation",e),P(this,"scale",e),P(this,"userData",e.userData),P(this,"visible",e),J(this,"props",e),this.$emit("created",e),this.lookAt&&e.lookAt((t=this.lookAt.x)!=null?t:0,this.lookAt.y,this.lookAt.z),x(()=>this.lookAt,r=>{var i;e.lookAt((i=r.x)!=null?i:0,r.y,r.z)},{deep:!0}),this.parent=this.getParent(),this.disableAdd||(this.addToParent()?this.$emit("ready",this):console.error("Missing parent (Scene, Group...)"))},getParent(){let e=this.$parent;if(!e){const t=$t();t&&t.parent&&(e=t.parent.ctx)}for(;e;){if(e.add)return e;e=e.$parent}},addToParent(e){const t=e||this.o3d;return this.parent?(this.parent.add(t),!0):!1},removeFromParent(e){const t=e||this.o3d;return this.parent?(this.parent.remove(t),!0):!1},add(e){var t;(t=this.o3d)==null||t.add(e)},remove(e){var t;(t=this.o3d)==null||t.remove(e)}},render(){return this.$slots.default?this.$slots.default():[]},__hmrId:"Object3D"}),xe=m({name:"Group",extends:Q,setup(){return{group:new Kt}},created(){this.initObject3D(this.group)},__hmrId:"Group"});const p1=()=>{};var we=m({name:"Raycaster",props:{onPointerEnter:{type:Function,default:p1},onPointerOver:{type:Function,default:p1},onPointerMove:{type:Function,default:p1},onPointerLeave:{type:Function,default:p1},onClick:{type:Function,default:p1},onDblClick:{type:Function,default:p1},intersectMode:{type:String,default:"move"},intersectRecursive:{type:Boolean,default:!1}},setup(){return{renderer:a1(W)}},mounted(){if(!this.renderer){console.error("Renderer not found");return}const e=this.renderer;this.renderer.onMounted(()=>{!e.camera||(this.pointer=fe({camera:e.camera,domElement:e.canvas,intersectObjects:()=>e.scene?e.scene.children:[],intersectRecursive:this.intersectRecursive,onIntersectEnter:this.onPointerEnter,onIntersectOver:this.onPointerOver,onIntersectMove:this.onPointerMove,onIntersectLeave:this.onPointerLeave,onIntersectClick:this.onClick}),this.pointer.addListeners(),this.intersectMode==="frame"&&e.onBeforeRender(this.pointer.intersect))})},unmounted(){var e;this.pointer&&(this.pointer.removeListeners(),(e=this.renderer)==null||e.offBeforeRender(this.pointer.intersect))},render(){return[]},__hmrId:"Raycaster"}),Se=m({extends:Q,props:{cubeRTSize:{type:Number,default:256},cubeCameraNear:{type:Number,default:.1},cubeCameraFar:{type:Number,default:2e3},autoUpdate:Boolean,hideMeshes:{type:Array,default:()=>[]}},setup(e){const t=a1(W);if(!t||!t.scene)return console.error("Missing Renderer / Scene"),{};const r=t.renderer,i=t.scene,s=new qt(e.cubeRTSize,{format:Yt,generateMipmaps:!0,minFilter:Zt}),o=new Jt(e.cubeCameraNear,e.cubeCameraFar,s),n=()=>{e.hideMeshes.forEach(a=>{a.visible=!1}),o.update(r,i),e.hideMeshes.forEach(a=>{a.visible=!0})};return e.autoUpdate?(t.onBeforeRender(n),Rt(()=>{t.offBeforeRender(n)})):t.onMounted(n),{cubeRT:s,cubeCamera:o,updateRT:n}},created(){this.cubeCamera&&this.initObject3D(this.cubeCamera)},render(){return[]},__hmrId:"CubeCamera"});class sr extends c.Object3D{constructor(t=!0){super(),this.name="COORDINATE_AXES",this.AXIS_LENGTH=1,this.AXIS_COLOR_X=16711680,this.AXIS_COLOR_Y=65280,this.AXIS_COLOR_Z=255;const r=new c.Vector3(0,0,0),i=new c.Vector3(1,0,0),s=new c.Vector3(0,1,0),o=new c.Vector3(0,0,1),n=new c.ArrowHelper(i,r,this.AXIS_LENGTH,this.AXIS_COLOR_X,this.AXIS_LENGTH/5,this.AXIS_LENGTH/8),a=new c.ArrowHelper(s,r,this.AXIS_LENGTH,this.AXIS_COLOR_Y,this.AXIS_LENGTH/5,this.AXIS_LENGTH/8),h=new c.ArrowHelper(o,r,this.AXIS_LENGTH,this.AXIS_COLOR_Z,this.AXIS_LENGTH/5,this.AXIS_LENGTH/8);this.add(n,a,h),t&&this.addTexts()}addTexts(){new ae().load("three/fonts/helvetiker_regular.typeface.json",t=>{const r=this.createText(t,"x",new c.Color(16711680)),i=this.createText(t,"y",new c.Color(65280)),s=this.createText(t,"z",new c.Color(255));r.position.set(this.AXIS_LENGTH,0,0),i.position.set(0,this.AXIS_LENGTH,0),s.position.set(0,0,this.AXIS_LENGTH),this.add(r,i,s)})}createText(t,r,i){const s=new ce(r,{font:t,size:.3,height:.02,curveSegments:6,bevelEnabled:!1,bevelThickness:0,bevelSize:.01,bevelSegments:3}),o=new c.MeshStandardMaterial({flatShading:!0,transparent:!0,opacity:.6,emissive:i||new c.Color(65280)});return new c.Mesh(s,o)}}class Oe{constructor(t,r){this.height=100,this.width=100,this.width=t||this.width,this.height=r||this.height,this.init()}init(){this.initRenderer(),this.initScene(),this.animate()}initRenderer(){this.renderer=new c.WebGLRenderer({antialias:!0,alpha:!0}),this.renderer.setSize(this.width,this.height)}initScene(){this.scene=new c.Scene,this.camera=new c.OrthographicCamera(-1,1,1,-1,.1,100),this.scene.add(this.camera),this.coordinateAxes=new sr,this.scene.add(this.coordinateAxes)}render(){this.renderer&&this.scene&&this.camera&&(this.update(),this.renderer.render(this.scene,this.camera))}animate(){requestAnimationFrame(this.animate.bind(this)),this.render()}setHostRenderer(t){this.hostRenderer=t,this.update()}update(){if(!this.hostRenderer||!this.hostRenderer.camera)return;const t=this.hostRenderer.camera;if(t){const r=new c.Vector3;t.getWorldDirection(r);const i=t.up;this.updateCameraDirection(r,i)}}updateCameraDirection(t,r){if(!this.camera||!t)return;t.normalize();const i=2,s=.3;this.camera.position.set(-t.x*i+s,-t.y*i+s,-t.z*i+s),this.camera.lookAt(s,s,s),this.camera.up=r}dispose(){!this.scene||!this.camera||!this.coordinateAxes||(this.scene.clear(),this.hostRenderer=void 0,this.camera=void 0,this.coordinateAxes=void 0,this.scene=void 0)}}const f1=Symbol("Mesh"),n1=m({name:"Mesh",extends:Q,props:{castShadow:Boolean,receiveShadow:Boolean},setup(){return{}},provide(){return{[f1]:this}},mounted(){!this.mesh&&!this.loading&&this.initMesh()},methods:{initMesh(){const e=new z1(this.geometry,this.material);P(this,"castShadow",e),P(this,"receiveShadow",e),this.mesh=e,this.initObject3D(e)},createGeometry(){},addGeometryWatchers(e){Object.keys(e).forEach(t=>{x(()=>this[t],()=>{this.refreshGeometry()})})},setGeometry(e){this.geometry=e,this.mesh&&(this.mesh.geometry=e)},setMaterial(e){this.material=e,this.mesh&&(this.mesh.material=e)},refreshGeometry(){const e=this.geometry;this.createGeometry(),this.mesh&&this.geometry&&(this.mesh.geometry=this.geometry),e==null||e.dispose()}},unmounted(){this.geometry&&this.geometry.dispose(),this.material&&this.material.dispose()},__hmrId:"Mesh"});function T(e,t,r){return m({name:e,extends:n1,props:t,created(){this.createGeometry(),this.addGeometryWatchers(t)},methods:{createGeometry(){this.geometry=r(this)}}})}const L1=m({emits:["created"],props:{rotateX:Number,rotateY:Number,rotateZ:Number,attributes:{type:Array,default:()=>[]}},inject:{mesh:f1},setup(){return{}},created(){if(!this.mesh){console.error("Missing parent Mesh");return}this.createGeometry(),this.rotateGeometry(),this.geometry&&this.mesh.setGeometry(this.geometry),Object.keys(this.$props).forEach(e=>{x(()=>this[e],this.refreshGeometry)})},unmounted(){var e;(e=this.geometry)==null||e.dispose()},methods:{createGeometry(){const e={},t=new Qt;this.attributes.forEach(r=>{if(r.name&&r.itemSize&&r.array){const i=e[r.name]=new e3(r.array,r.itemSize,r.normalized);t.setAttribute(r.name,i)}}),t.computeBoundingBox(),t.userData.component=this,this.geometry=t,this.$emit("created",t)},rotateGeometry(){!this.geometry||(this.rotateX&&this.geometry.rotateX(this.rotateX),this.rotateY&&this.geometry.rotateY(this.rotateY),this.rotateZ&&this.geometry.rotateZ(this.rotateZ))},refreshGeometry(){const e=this.geometry;this.createGeometry(),this.rotateGeometry(),this.geometry&&this.mesh&&this.mesh.setGeometry(this.geometry),e==null||e.dispose()}},render(){return[]}});function E(e,t,r){return m({name:e,extends:L1,props:t,methods:{createGeometry(){this.geometry=r(this),this.geometry.userData.component=this,this.$emit("created",this.geometry)}}})}const Me={size:Number,width:{type:Number,default:1},height:{type:Number,default:1},depth:{type:Number,default:1},widthSegments:{type:Number,default:1},heightSegments:{type:Number,default:1},depthSegments:{type:Number,default:1}};function Pe(e){return e.size?new ie(e.size,e.size,e.size,e.widthSegments,e.heightSegments,e.depthSegments):new ie(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}var Ce=E("BoxGeometry",Me,Pe);const Ee={radius:{type:Number,default:1},segments:{type:Number,default:8},thetaStart:{type:Number,default:0},thetaLength:{type:Number,default:Math.PI*2}};function je(e){return new t3(e.radius,e.segments,e.thetaStart,e.thetaLength)}var Le=E("CircleGeometry",Ee,je);const Ne={radius:{type:Number,default:1},height:{type:Number,default:1},radialSegments:{type:Number,default:8},heightSegments:{type:Number,default:1},openEnded:{type:Boolean,default:!1},thetaStart:{type:Number,default:0},thetaLength:{type:Number,default:Math.PI*2}};function Ie(e){return new r3(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}var Ge=E("ConeGeometry",Ne,Ie);const Ae={radiusTop:{type:Number,default:1},radiusBottom:{type:Number,default:1},height:{type:Number,default:1},radialSegments:{type:Number,default:8},heightSegments:{type:Number,default:1},openEnded:{type:Boolean,default:!1},thetaStart:{type:Number,default:0},thetaLength:{type:Number,default:Math.PI*2}};function Te(e){return new i3(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}var Be=E("CylinderGeometry",Ae,Te);const ze={radius:{type:Number,default:1},detail:{type:Number,default:0}};function $e(e){return new s3(e.radius,e.detail)}var Re=E("DodecahedronGeometry",ze,$e);const nr={shapes:{type:[Object,Array]},options:{type:Object}};function or(e){return new n3(e.shapes,e.options)}var _e=E("ExtrudeGeometry",nr,or);const ke={radius:{type:Number,default:1},detail:{type:Number,default:0}};function De(e){return new o3(e.radius,e.detail)}var Fe=E("IcosahedronGeometry",ke,De);const Ue={points:Array,segments:{type:Number,default:12},phiStart:{type:Number,default:0},phiLength:{type:Number,default:Math.PI*2}};function Ve(e){return new a3(e.points,e.segments,e.phiStart,e.phiLength)}var Xe=E("LatheGeometry",Ue,Ve);const He={radius:{type:Number,default:1},detail:{type:Number,default:0}};function We(e){return new c3(e.radius,e.detail)}var Ke=E("OctahedronGeometry",He,We);const qe={width:{type:Number,default:1},height:{type:Number,default:1},widthSegments:{type:Number,default:1},heightSegments:{type:Number,default:1}};function Ye(e){return new se(e.width,e.height,e.widthSegments,e.heightSegments)}var Ze=E("PlaneGeometry",qe,Ye);const Je={vertices:Array,indices:Array,radius:{type:Number,default:1},detail:{type:Number,default:0}};function Qe(e){return new l3(e.vertices,e.indices,e.radius,e.detail)}var e0=E("PolyhedronGeometry",Je,Qe);const t0={innerRadius:{type:Number,default:.5},outerRadius:{type:Number,default:1},thetaSegments:{type:Number,default:8},phiSegments:{type:Number,default:1},thetaStart:{type:Number,default:0},thetaLength:{type:Number,default:Math.PI*2}};function r0(e){return new d3(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}var i0=E("RingGeometry",t0,r0);const s0={radius:{type:Number,default:1},widthSegments:{type:Number,default:12},heightSegments:{type:Number,default:12},phiStart:{type:Number,default:0},phiLength:{type:Number,default:Math.PI*2},thetaStart:{type:Number,default:0},thetaLength:{type:Number,default:Math.PI}};function n0(e){return new h3(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}var o0=E("SphereGeometry",s0,n0);const ar={shapes:{type:[Object,Array]},curveSegments:{type:Number}};function cr(e){return new u3(e.shapes,e.curveSegments)}var a0=E("ShapeGeometry",ar,cr);const c0={radius:{type:Number,default:1},detail:{type:Number,default:0}};function l0(e){return new m3(e.radius,e.detail)}var d0=E("TetrahedronGeometry",c0,l0);const h0={radius:{type:Number,default:1},tube:{type:Number,default:.4},radialSegments:{type:Number,default:8},tubularSegments:{type:Number,default:6},arc:{type:Number,default:Math.PI*2}};function u0(e){return new p3(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}var m0=E("TorusGeometry",h0,u0);const p0={radius:{type:Number,default:1},tube:{type:Number,default:.4},tubularSegments:{type:Number,default:64},radialSegments:{type:Number,default:8},p:{type:Number,default:2},q:{type:Number,default:3}};function f0(e){return new f3(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}var y0=E("TorusKnotGeometry",p0,f0);const V1={points:Array,path:y3,tubularSegments:{type:Number,default:64},radius:{type:Number,default:1},radialSegments:{type:Number,default:8},closed:{type:Boolean,default:!1}};function g0(e){let t;return e.points?t=new ne(e.points):e.path?t=e.path:console.error("Missing path curve or points."),new g3(t,e.tubularSegments,e.radius,e.radiusSegments,e.closed)}var b0=m({extends:L1,props:V1,methods:{createGeometry(){this.geometry=g0(this)},updatePoints(e){v0(this.geometry,e)}}});function v0(e,t){const r=new ne(t),{radialSegments:i,radius:s,tubularSegments:o,closed:n}=e.parameters,a=r.computeFrenetFrames(o,n);e.tangents=a.tangents,e.normals=a.normals,e.binormals=a.binormals,e.parameters.path=r;const h=e.getAttribute("position"),l=e.getAttribute("normal"),y=new c1,b=new c1;for(let j=0;j<o;j++)B(j);B(o),e.attributes.position.needsUpdate=!0,e.attributes.normal.needsUpdate=!0;function B(j){r.getPointAt(j/o,b);const t1=a.normals[j],r1=a.binormals[j];for(let K=0;K<=i;K++){const k=K/i*Math.PI*2,e1=Math.sin(k),I=-Math.cos(k);y.x=I*t1.x+e1*r1.x,y.y=I*t1.y+e1*r1.y,y.z=I*t1.z+e1*r1.z,y.normalize();const L=j*(i+1)+K;l.setXYZ(L,y.x,y.y,y.z),h.setXYZ(L,b.x+s*y.x,b.y+s*y.y,b.z+s*y.z)}}}var y1=m({extends:Q,name:"Light",props:{color:{type:String,default:"#ffffff"},intensity:{type:Number,default:1},castShadow:{type:Boolean,default:!1},shadowMapSize:{type:Object,default:()=>({x:512,y:512})},shadowCamera:{type:Object,default:()=>({})}},setup(){return{}},unmounted(){(this.light instanceof R1||this.light instanceof _1)&&this.removeFromParent(this.light.target)},methods:{initLight(e){this.light=e,e.shadow&&(e.castShadow=this.castShadow,m1(e.shadow.mapSize,this.shadowMapSize),m1(e.shadow.camera,this.shadowCamera)),["color","intensity","castShadow"].forEach(t=>{x(()=>this[t],r=>{t==="color"?e.color.set(r):e[t]=r})}),this.initObject3D(e),(e instanceof R1||e instanceof _1)&&(P(this,"target",e.target,"position"),this.addToParent(e.target))}},__hmrId:"Light"}),x0=m({extends:y1,created(){this.initLight(new b3(this.color,this.intensity))},__hmrId:"AmbientLight"}),w0=m({extends:y1,props:{target:{type:Object,default:()=>({x:0,y:0,z:0})}},created(){this.initLight(new _1(this.color,this.intensity))},__hmrId:"DirectionalLight"}),S0=m({extends:y1,props:{groundColor:{type:String,default:"#444444"}},created(){const e=new v3(this.color,this.groundColor,this.intensity);x(()=>this.groundColor,t=>{e.groundColor.set(t)}),this.initLight(e)},__hmrId:"HemisphereLight"}),O0=m({extends:y1,props:{distance:{type:Number,default:0},decay:{type:Number,default:1}},created(){this.initLight(new x3(this.color,this.intensity,this.distance,this.decay))},__hmrId:"PointLight"}),M0=m({extends:y1,props:{width:{type:Number,default:10},height:{type:Number,default:10},helper:Boolean},created(){B3.init();const e=new w3(this.color,this.intensity,this.width,this.height);if(["width","height"].forEach(t=>{x(()=>this[t],r=>{e[t]=r})}),this.helper){const t=new z3(e);e.add(t)}this.initLight(e)},__hmrId:"RectAreaLight"}),P0=m({extends:y1,props:{angle:{type:Number,default:Math.PI/3},decay:{type:Number,default:1},distance:{type:Number,default:0},penumbra:{type:Number,default:0},target:Object},created(){const e=new R1(this.color,this.intensity,this.distance,this.angle,this.penumbra,this.decay);["angle","decay","distance","penumbra"].forEach(t=>{x(()=>this[t],r=>{e[t]=r})}),this.initLight(e)},__hmrId:"SpotLight"});const N1=Symbol("Material"),I1=m({emits:["created"],props:{color:{type:String,default:"#ffffff"},props:{type:Object,default:()=>({})}},inject:{mesh:f1},setup(){return{}},provide(){return{[N1]:this}},created(){if(!this.mesh){console.error("Missing parent Mesh");return}if(this.createMaterial){const e=this.material=this.createMaterial();x(()=>this.color,t=>{e.color.set(t)}),J(this,"props",e,!1,this.setProp),this.$emit("created",e),this.mesh.setMaterial(e)}},unmounted(){var e;(e=this.material)==null||e.dispose()},methods:{getMaterialParams(){return{...S1(this.$props,["props"]),...this.props}},setProp(e,t,r,i=!1){const s=e[t];s instanceof d1?s.set(r):e[t]=r,e.needsUpdate=i},setTexture(e,t="map"){this.setProp(this.material,t,e,!0)}},render(){return this.$slots.default?this.$slots.default():[]},__hmrId:"Material"});function Y(e,t,r){return m({name:e,extends:I1,props:t,methods:{createMaterial(){return r(this.getMaterialParams())}}})}const C0=Y("BasicMaterial",{props:{type:Object,default:()=>({})}},e=>new $1(e)),E0=Y("LambertMaterial",{props:{type:Object,default:()=>({})}},e=>new te(e)),j0=Y("PhongMaterial",{props:{type:Object,default:()=>({})}},e=>new ee(e)),L0=Y("PhysicalMaterial",{props:{type:Object,default:()=>({})}},e=>new S3(e)),N0=Y("PointsMaterial",{props:{type:Object,default:()=>({})}},e=>new O3(e)),I0=Y("ShadowMaterial",{color:{type:String,default:"#000000"},props:{type:Object,default:()=>({})}},e=>new M3(e)),G0=Y("StandardMaterial",{props:{type:Object,default:()=>({})}},e=>new Q1(e)),A0=Y("ToonMaterial",{props:{type:Object,default:()=>({})}},e=>new P3(e));var T0=Y("MatcapMaterial",{src:String,name:{type:String,default:"0404E8_0404B5_0404CB_3333FC"}},e=>{const t=e.src?e.src:D1(e.name),r=S1(e,["src","name"]);return r.matcap=new x1().load(t),new C3(r)});const lr=`
  varying vec2 vUv;
  void main(){
    vUv = uv;
    gl_Position = projectionMatrix * modelViewMatrix * vec4(position,1.0);
  }
`,dr=`
  varying vec2 vUv;
  void main() {
    gl_FragColor = vec4(vUv.x, vUv.y, 0., 1.0);
  }
`;var B0=Y("ShaderMaterial",{props:{type:Object,default:()=>({uniforms:{},vertexShader:lr,fragmentShader:dr})}},e=>new k1(S1(e,["color"])));function hr(e,t,r){return e.split(t).join(r)}const ur=h1.meshphong_frag.slice(0,h1.meshphong_frag.indexOf("void main() {")),mr=h1.meshphong_frag.slice(h1.meshphong_frag.indexOf("void main() {")),pr={uniforms:oe.merge([E3.phong.uniforms,{thicknessColor:{value:new d1(16777215)},thicknessDistortion:{value:.1},thicknessAmbient:{value:0},thicknessAttenuation:{value:.1},thicknessPower:{value:2},thicknessScale:{value:10}}]),vertexShader:`
    #define USE_UV
    ${h1.meshphong_vert}
  `,fragmentShader:`
    #define USE_UV
    #define SUBSURFACE

    ${ur}

    uniform float thicknessPower;
    uniform float thicknessScale;
    uniform float thicknessDistortion;
    uniform float thicknessAmbient;
    uniform float thicknessAttenuation;
    uniform vec3 thicknessColor;

    void RE_Direct_Scattering(const in IncidentLight directLight, const in vec2 uv, const in GeometricContext geometry, inout ReflectedLight reflectedLight) {
      #ifdef USE_COLOR
        vec3 thickness = vColor * thicknessColor;
      #else
        vec3 thickness = thicknessColor;
      #endif
      vec3 scatteringHalf = normalize(directLight.direction + (geometry.normal * thicknessDistortion));
      float scatteringDot = pow(saturate(dot(geometry.viewDir, -scatteringHalf)), thicknessPower) * thicknessScale;
      vec3 scatteringIllu = (scatteringDot + thicknessAmbient) * thickness;
      reflectedLight.directDiffuse += scatteringIllu * thicknessAttenuation * directLight.color;
    }
  `+mr.replace("#include <lights_fragment_begin>",hr(h1.lights_fragment_begin,"RE_Direct( directLight, geometry, material, reflectedLight );",`
        RE_Direct( directLight, geometry, material, reflectedLight );
        #if defined( SUBSURFACE ) && defined( USE_UV )
          RE_Direct_Scattering(directLight, vUv, geometry, reflectedLight);
        #endif
      `))};var z0=m({extends:I1,props:{uniforms:{type:Object,default:()=>({diffuse:"#ffffff",thicknessColor:"#ffffff",thicknessDistortion:.4,thicknessAmbient:.01,thicknessAttenuation:.7,thicknessPower:2,thicknessScale:4})}},methods:{createMaterial(){const e=pr,t=oe.clone(e.uniforms);return J(this,"uniforms",t,!0,(r,i,s)=>{const o=r[i].value;o instanceof d1?o.set(s):r[i].value=s}),new k1({...e,lights:!0,...this.props,uniforms:t})}}}),G1=m({inject:{material:N1},props:{name:{type:String,default:"map"},uniform:String,src:String,onLoad:Function,onProgress:Function,onError:Function,props:{type:Object,default:()=>({})}},setup(){return{}},created(){this.refreshTexture(),x(()=>this.src,this.refreshTexture)},unmounted(){var e,t;(e=this.material)==null||e.setTexture(null,this.name),(t=this.texture)==null||t.dispose()},methods:{createTexture(){if(this.src)return new x1().load(this.src,this.onLoaded,this.onProgress,this.onError)},initTexture(){!this.texture||(J(this,"props",this.texture),this.material&&(this.material.setTexture(this.texture,this.name),this.material.material instanceof k1&&this.uniform&&(this.material.material.uniforms[this.uniform]={value:this.texture})))},refreshTexture(){var e;(e=this.texture)==null||e.dispose(),this.texture=this.createTexture(),this.initTexture()},onLoaded(e){var t;(t=this.onLoad)==null||t.call(this,e)}},render(){return[]}}),$0=m({extends:G1,props:{name:{type:String,default:"envMap"},path:{type:String,required:!0},urls:{type:Array,default:()=>["px.jpg","nx.jpg","py.jpg","ny.jpg","pz.jpg","nz.jpg"]},props:{type:Object,default:()=>({mapping:j3})}},created(){x(()=>this.path,this.refreshTexture),x(()=>this.urls,this.refreshTexture)},methods:{createTexture(){return new L3().setPath(this.path).load(this.urls,this.onLoaded,this.onProgress,this.onError)}}}),R0=m({extends:G1,props:{videoId:{type:String,required:!0}},created(){x(()=>this.videoId,this.refreshTexture)},methods:{createTexture(){const e=document.getElementById(this.videoId);return new N3(e)}}}),_0=T("Box",Me,Pe),k0=T("Circle",Ee,je),D0=T("Cone",Ne,Ie),F0=T("Cylinder",Ae,Te),U0=T("Dodecahedron",ze,$e),V0=T("Icosahedron",ke,De),X0=T("Lathe",Ue,Ve),H0=T("Octahedron",He,We),W0=T("Plane",qe,Ye),K0=T("Polyhedron",Je,Qe),q0=T("Ring",t0,r0),Y0=T("Sphere",s0,n0),Z0=T("Tetrahedron",c0,l0);const fr={text:{type:String,required:!0,default:"Text"},fontSrc:{type:String,required:!0},size:{type:Number,default:80},height:{type:Number,default:5},depth:{type:Number,default:1},curveSegments:{type:Number,default:12},bevelEnabled:{type:Boolean,default:!1},bevelThickness:{type:Number,default:10},bevelSize:{type:Number,default:8},bevelOffset:{type:Number,default:0},bevelSegments:{type:Number,default:5},align:{type:[Boolean,String],default:!1}};var J0=m({extends:n1,props:fr,setup(){return{}},created(){if(!this.fontSrc){console.error('Missing required prop: "font-src"');return}["text","size","height","curveSegments","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","align"].forEach(t=>{x(()=>this[t],()=>{this.font&&this.refreshGeometry()})});const e=new ae;this.loading=!0,e.load(this.fontSrc,t=>{this.loading=!1,this.font=t,this.createGeometry(),this.initMesh()})},methods:{createGeometry(){this.geometry=new ce(this.text,{font:this.font,size:this.size,height:this.height,depth:this.depth,curveSegments:this.curveSegments,bevelEnabled:this.bevelEnabled,bevelThickness:this.bevelThickness,bevelSize:this.bevelSize,bevelOffset:this.bevelOffset,bevelSegments:this.bevelSegments}),this.align==="center"&&this.geometry.center()}}}),Q0=T("Torus",h0,u0),et=T("TorusKnot",p0,f0),tt=m({extends:n1,props:V1,created(){this.createGeometry(),this.addGeometryWatchers(V1)},methods:{createGeometry(){this.geometry=g0(this)},updatePoints(e){v0(this.geometry,e)}},__hmrId:"Tube"}),rt=m({emits:["loaded"],extends:n1,props:{src:{type:String,required:!0},width:Number,height:Number,widthSegments:{type:Number,default:1},heightSegments:{type:Number,default:1},keepSize:Boolean},setup(){return{}},created(){!this.renderer||(this.geometry=new se(1,1,this.widthSegments,this.heightSegments),this.material=new $1({side:re,map:this.loadTexture()}),x(()=>this.src,this.refreshTexture),["width","height"].forEach(e=>{x(()=>this[e],this.resize)}),this.resize(),this.keepSize&&this.renderer.onResize(this.resize))},unmounted(){var e;(e=this.renderer)==null||e.offResize(this.resize)},methods:{loadTexture(){return new x1().load(this.src,this.onLoaded)},refreshTexture(){var e;(e=this.texture)==null||e.dispose(),this.material&&(this.material.map=this.loadTexture(),this.material.needsUpdate=!0)},onLoaded(e){this.texture=e,this.resize(),this.$emit("loaded",e)},resize(){if(!this.renderer||!this.texture)return;const e=this.renderer.size,t=this.texture.image.width,r=this.texture.image.height,i=t/r;let s=1,o=1;this.width&&this.height?(s=this.width*e.wWidth/e.width,o=this.height*e.wHeight/e.height):this.width?(s=this.width*e.wWidth/e.width,o=s/i):this.height?(o=this.height*e.wHeight/e.height,s=o*i):i>1?s=o*i:o=s/i,this.mesh&&(this.mesh.scale.x=s,this.mesh.scale.y=o)}},__hmrId:"Image"}),it=m({extends:n1,props:{count:{type:Number,required:!0}},methods:{initMesh(){if(this.renderer){if(!this.geometry||!this.material)return console.error("Missing geometry and/or material"),!1;this.mesh=new l1(this.geometry,this.material,this.count),this.mesh.userData.component=this,P(this,"castShadow",this.mesh),P(this,"receiveShadow",this.mesh),(this.onPointerEnter||this.onPointerOver||this.onPointerMove||this.onPointerLeave||this.onPointerDown||this.onPointerUp||this.onClick)&&this.renderer.three.addIntersectObject(this.mesh),this.initObject3D(this.mesh)}}},__hmrId:"InstancedMesh"}),st=m({extends:Q,emits:["loaded"],props:{src:{type:String,required:!0}},setup(){return{}},created(){this.texture=new x1().load(this.src,this.onLoaded),this.material=new I3({map:this.texture}),this.sprite=new G3(this.material),this.initObject3D(this.sprite)},unmounted(){var e,t;(e=this.texture)==null||e.dispose(),(t=this.material)==null||t.dispose()},methods:{onLoaded(){this.updateUV(),this.$emit("loaded")},updateUV(){if(!this.texture||!this.sprite)return;const e=this.texture.image.width,t=this.texture.image.height,r=e/t;let i=.5,s=.5;r>1?i=.5*r:s=.5/r;const o=this.sprite.geometry.attributes.position.array;o[0]=-i,o[1]=-s,o[5]=i,o[6]=-s,o[10]=i,o[11]=s,o[15]=-i,o[16]=s,this.sprite.geometry.attributes.position.needsUpdate=!0}},__hmrId:"Sprite"}),nt=m({extends:Q,setup(){return{}},provide(){return{[f1]:this}},mounted(){this.mesh=this.points=new A3(this.geometry,this.material),this.initObject3D(this.mesh)},methods:{setGeometry(e){this.geometry=e,this.mesh&&(this.mesh.geometry=e)},setMaterial(e){this.material=e,this.mesh&&(this.mesh.material=e)}}}),ot=m({extends:Q,emits:["before-load","load","progress","error"],props:{src:{type:String,required:!0}},data(){return{progress:0}},methods:{onLoad(e){this.$emit("load",e)},onProgress(e){this.progress=e.loaded/e.total,this.$emit("progress",e)},onError(e){this.$emit("error",e)}}}),at=m({extends:ot,props:{dracoPath:{type:String,required:!0}},created(){const e=new $3;if(this.dracoPath){const t=new R3;t.setDecoderPath(this.dracoPath),e.setDRACOLoader(t)}this.$emit("before-load",e),e.load(this.src,t=>{this.onLoad(t),this.initObject3D(t.scene)},this.onProgress,this.onError)}}),ct=m({extends:ot,created(){const e=new _3;this.$emit("before-load",e),e.load(this.src,t=>{this.onLoad(t),this.initObject3D(t)},this.onProgress,this.onError)}});const A1=Symbol("Composer");var lt=m({setup(){return{renderer:a1(W)}},provide(){return{[A1]:this}},created(){if(!this.renderer){console.error("Renderer not found");return}const e=this.renderer,t=new k3(this.renderer.renderer);this.composer=t,this.renderer.composer=t,e.addListener("init",()=>{e.renderer.autoClear=!1,this.resize(),e.addListener("resize",this.resize)})},unmounted(){var e;(e=this.renderer)==null||e.removeListener("resize",this.resize)},methods:{addPass(e){var t;(t=this.composer)==null||t.addPass(e)},removePass(e){var t;(t=this.composer)==null||t.removePass(e)},resize(){this.composer&&this.renderer&&this.composer.setSize(this.renderer.size.width,this.renderer.size.height)}},render(){return this.$slots.default?this.$slots.default():[]},__hmrId:"EffectComposer"}),V=m({inject:{renderer:W,composer:A1},emits:["ready"],setup(){return{}},created(){this.composer||console.error("Missing parent EffectComposer"),this.renderer||console.error("Missing parent Renderer")},unmounted(){var e,t,r;this.pass&&((e=this.composer)==null||e.removePass(this.pass),(r=(t=this.pass).dispose)==null||r.call(t))},methods:{initEffectPass(e){var t;this.pass=e,(t=this.composer)==null||t.addPass(e),this.$emit("ready",e)}},render(){return[]},__hmrId:"EffectPass"}),dt=m({extends:V,created(){if(!this.renderer)return;if(!this.renderer.scene){console.error("Missing Scene");return}if(!this.renderer.camera){console.error("Missing Camera");return}const e=new D3(this.renderer.scene,this.renderer.camera);this.initEffectPass(e)},__hmrId:"RenderPass"});const ht={focus:{type:Number,default:1},aperture:{type:Number,default:.025},maxblur:{type:Number,default:.01}};var ut=m({extends:V,props:ht,created(){if(!this.renderer)return;if(!this.renderer.scene){console.error("Missing Scene");return}if(!this.renderer.camera){console.error("Missing Camera");return}const e={focus:this.focus,aperture:this.aperture,maxblur:this.maxblur,width:this.renderer.size.width,height:this.renderer.size.height},t=new F3(this.renderer.scene,this.renderer.camera,e);Object.keys(ht).forEach(r=>{x(()=>this[r],i=>{t.uniforms[r].value=i})}),this.initEffectPass(t)},__hmrId:"BokehPass"});const mt={noiseIntensity:{type:Number,default:.5},scanlinesIntensity:{type:Number,default:.05},scanlinesCount:{type:Number,default:4096},grayscale:{type:Number,default:0}};var pt=m({extends:V,props:mt,created(){const e=new U3(this.noiseIntensity,this.scanlinesIntensity,this.scanlinesCount,this.grayscale);Object.keys(mt).forEach(t=>{x(()=>this[t],r=>{e.uniforms[t].value=r})}),this.initEffectPass(e)},__hmrId:"FilmPass"}),ft=m({extends:V,created(){var e;const t=new P1(V3);(e=this.renderer)==null||e.addListener("resize",this.resize),this.initEffectPass(t)},unmounted(){var e;(e=this.renderer)==null||e.removeListener("resize",this.resize)},methods:{resize({size:e}){if(this.pass){const{resolution:t}=this.pass.material.uniforms;t.value.x=1/e.width,t.value.y=1/e.height}}},__hmrId:"FXAAPass"});const yt={shape:{type:Number,default:1},radius:{type:Number,default:4},rotateR:{type:Number,default:Math.PI/12*1},rotateG:{type:Number,default:Math.PI/12*2},rotateB:{type:Number,default:Math.PI/12*3},scatter:{type:Number,default:0}};var gt=m({extends:V,props:yt,created(){if(!this.renderer)return;const e=new X3(this.renderer.size.width,this.renderer.size.height,{});Object.keys(yt).forEach(t=>{e.uniforms[t].value=this[t],x(()=>this[t],r=>{e.uniforms[t].value=r})}),this.initEffectPass(e)},__hmrId:"HalftonePass"}),bt=m({extends:V,created(){if(!this.renderer)return;const e=new H3(this.renderer.size.width,this.renderer.size.height);this.initEffectPass(e)},__hmrId:"SMAAPass"}),vt=m({extends:V,props:{options:{type:Object,default:()=>({})}},created(){if(!this.renderer)return;if(!this.renderer.scene){console.error("Missing Scene");return}if(!this.renderer.camera){console.error("Missing Camera");return}const e=new W3(this.renderer.scene,this.renderer.camera,this.renderer.size.width,this.renderer.size.height);Object.keys(this.options).forEach(t=>{e[t]=this.options[t]}),this.initEffectPass(e)},__hmrId:"SSAOPass"}),xt={uniforms:{},vertexShader:`
    varying vec2 vUv;
    void main() {
      vUv = uv;
      gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
    }
  `,fragmentShader:`
    varying vec2 vUv;
    void main() {
      gl_FragColor = vec4(1.0, 1.0, 1.0, 1.0);
    }
  `},wt={uniforms:{tDiffuse:{value:null},blurRadius:{value:0},gradientRadius:{value:0},start:{value:new Z},end:{value:new Z},delta:{value:new Z},texSize:{value:new Z}},vertexShader:xt.vertexShader,fragmentShader:`
    uniform sampler2D tDiffuse;
    uniform float blurRadius;
    uniform float gradientRadius;
    uniform vec2 start;
    uniform vec2 end;
    uniform vec2 delta;
    uniform vec2 texSize;
    varying vec2 vUv;

    float random(vec3 scale, float seed) {
      /* use the fragment position for a different seed per-pixel */
      return fract(sin(dot(gl_FragCoord.xyz + seed, scale)) * 43758.5453 + seed);
    }

    void main() {
      vec4 color = vec4(0.0);
      float total = 0.0;

      /* randomize the lookup values to hide the fixed number of samples */
      float offset = random(vec3(12.9898, 78.233, 151.7182), 0.0);

      vec2 normal = normalize(vec2(start.y - end.y, end.x - start.x));
      float radius = smoothstep(0.0, 1.0, abs(dot(vUv * texSize - start, normal)) / gradientRadius) * blurRadius;
      for (float t = -30.0; t <= 30.0; t++) {
          float percent = (t + offset - 0.5) / 30.0;
          float weight = 1.0 - abs(percent);
          vec4 texel = texture2D(tDiffuse, vUv + delta / texSize * percent * radius);
          // vec4 texel2 = texture2D(tDiffuse, vUv + vec2(-delta.y, delta.x) / texSize * percent * radius);

          /* switch to pre-multiplied alpha to correctly blur transparent images */
          texel.rgb *= texel.a;
          // texel2.rgb *= texel2.a;

          color += texel * weight;
          total += 2.0 * weight;
      }

      gl_FragColor = color / total;

      /* switch back from pre-multiplied alpha */
      gl_FragColor.rgb /= gl_FragColor.a + 0.00001;
    }
  `};const yr={blurRadius:{type:Number,default:10},gradientRadius:{type:Number,default:100},start:{type:Object,default:()=>({x:0,y:100})},end:{type:Object,default:()=>({x:10,y:100})}};var St=m({extends:V,props:yr,setup(){return{uniforms1:{},uniforms2:{}}},created(){if(!this.composer)return;this.pass1=new P1(wt),this.pass2=new P1(wt);const e=this.uniforms1=this.pass1.uniforms,t=this.uniforms2=this.pass2.uniforms;t.blurRadius=e.blurRadius,t.gradientRadius=e.gradientRadius,t.start=e.start,t.end=e.end,t.texSize=e.texSize,P(this,"blurRadius",e.blurRadius,"value"),P(this,"gradientRadius",e.gradientRadius,"value"),this.updateFocusLine(),["start","end"].forEach(r=>{x(()=>this[r],this.updateFocusLine,{deep:!0})}),this.pass1.setSize=(r,i)=>{e.texSize.value.set(r,i)},this.initEffectPass(this.pass1),this.composer.addPass(this.pass2)},unmounted(){this.composer&&this.pass2&&this.composer.removePass(this.pass2)},methods:{updateFocusLine(){this.uniforms1.start.value.copy(this.start),this.uniforms1.end.value.copy(this.end);const e=new Z().copy(this.end).sub(this.start).normalize();this.uniforms1.delta.value.copy(e),this.uniforms2.delta.value.set(-e.y,e.x)}},__hmrId:"TiltShiftPass"});const Ot={strength:{type:Number,default:1.5},radius:{type:Number,default:0},threshold:{type:Number,default:0}};var Mt=m({extends:V,props:Ot,created(){if(!this.renderer)return;const e=new Z(this.renderer.size.width,this.renderer.size.height),t=new K3(e,this.strength,this.radius,this.threshold);Object.keys(Ot).forEach(r=>{x(()=>this[r],i=>{t.uniforms[r].value=i})}),this.initEffectPass(t)},__hmrId:"UnrealBloomPass"}),gr={uniforms:{tDiffuse:{value:null},center:{value:new Z(.5,.5)},strength:{value:0}},vertexShader:xt.vertexShader,fragmentShader:`
    uniform sampler2D tDiffuse;
    uniform vec2 center;
    uniform float strength;
    varying vec2 vUv;

    float random(vec3 scale, float seed) {
      /* use the fragment position for a different seed per-pixel */
      return fract(sin(dot(gl_FragCoord.xyz + seed, scale)) * 43758.5453 + seed);
    }
    
    void main() {
      vec4 color = vec4(0.0);
      float total = 0.0;
      vec2 toCenter = center - vUv;
      
      /* randomize the lookup values to hide the fixed number of samples */
      float offset = random(vec3(12.9898, 78.233, 151.7182), 0.0);
      
      for (float t = 0.0; t <= 40.0; t++) {
        float percent = (t + offset) / 40.0;
        float weight = 4.0 * (percent - percent * percent);
        vec4 texel = texture2D(tDiffuse, vUv + toCenter * percent * strength);

        /* switch to pre-multiplied alpha to correctly blur transparent images */
        texel.rgb *= texel.a;

        color += texel * weight;
        total += weight;
      }

      gl_FragColor = color / total;

      /* switch back from pre-multiplied alpha */
      gl_FragColor.rgb /= gl_FragColor.a + 0.00001;
    }
  `},Pt=m({extends:V,props:{center:{type:Object,default:()=>({x:.5,y:.5})},strength:{type:Number,default:.5}},created(){const e=new P1(gr);P(this,"center",e.uniforms.center,"value"),P(this,"strength",e.uniforms.strength,"value"),this.initEffectPass(e)},__hmrId:"ZoomBlurPass"}),br=Object.freeze({__proto__:null,Renderer:ye,RendererInjectionKey:W,OrthographicCamera:be,PerspectiveCamera:E1,Camera:E1,Group:xe,Scene:ve,SceneInjectionKey:j1,Object3D:Q,Raycaster:we,CubeCamera:Se,CoordinateAxesViewport:Oe,BufferGeometry:L1,BoxGeometry:Ce,CircleGeometry:Le,ConeGeometry:Ge,CylinderGeometry:Be,DodecahedronGeometry:Re,ExtrudeGeometry:_e,IcosahedronGeometry:Fe,LatheGeometry:Xe,OctahedronGeometry:Ke,PlaneGeometry:Ze,PolyhedronGeometry:e0,RingGeometry:i0,SphereGeometry:o0,ShapeGeometry:a0,TetrahedronGeometry:d0,TorusGeometry:m0,TorusKnotGeometry:y0,TubeGeometry:b0,AmbientLight:x0,DirectionalLight:w0,HemisphereLight:S0,PointLight:O0,RectAreaLight:M0,SpotLight:P0,Material:I1,BasicMaterial:C0,LambertMaterial:E0,PhongMaterial:j0,PhysicalMaterial:L0,PointsMaterial:N0,ShadowMaterial:I0,StandardMaterial:G0,ToonMaterial:A0,MaterialInjectionKey:N1,MatcapMaterial:T0,ShaderMaterial:B0,SubSurfaceMaterial:z0,Texture:G1,CubeTexture:$0,VideoTexture:R0,Mesh:n1,MeshInjectionKey:f1,Box:_0,Circle:k0,Cone:D0,Cylinder:F0,Dodecahedron:U0,Icosahedron:V0,Lathe:X0,Octahedron:H0,Plane:W0,Polyhedron:K0,Ring:q0,Sphere:Y0,Tetrahedron:Z0,Text:J0,Torus:Q0,TorusKnot:et,Tube:tt,Image:rt,InstancedMesh:it,Sprite:st,Points:nt,GltfModel:at,FbxModel:ct,EffectComposer:lt,ComposerInjectionKey:A1,RenderPass:dt,EffectPass:V,BokehPass:ut,FilmPass:pt,FXAAPass:ft,HalftonePass:gt,SMAAPass:bt,SSAOPass:vt,TiltShiftPass:St,UnrealBloomPass:Mt,ZoomBlurPass:Pt,applyObjectProps:u1,bindObjectProp:J,bindObjectProps:le,setFromProp:m1,bindProps:de,bindProp:P,propsValues:S1,lerp:he,limit:ue,getMatcapUrl:D1});const Ct={install(e){["Camera","OrthographicCamera","PerspectiveCamera","Raycaster","Renderer","Scene","Group","CubeCamera","AmbientLight","DirectionalLight","HemisphereLight","PointLight","RectAreaLight","SpotLight","BasicMaterial","LambertMaterial","MatcapMaterial","PhongMaterial","PhysicalMaterial","PointsMaterial","ShaderMaterial","StandardMaterial","SubSurfaceMaterial","ToonMaterial","Texture","CubeTexture","BufferGeometry","Mesh","Box","BoxGeometry","Circle","CircleGeometry","Cone","ConeGeometry","Cylinder","CylinderGeometry","Dodecahedron","DodecahedronGeometry","Icosahedron","IcosahedronGeometry","Lathe","LatheGeometry","Octahedron","OctahedronGeometry","Plane","PlaneGeometry","Polyhedron","PolyhedronGeometry","Ring","RingGeometry","Sphere","SphereGeometry","Tetrahedron","TetrahedronGeometry","Text","Torus","TorusGeometry","TorusKnot","TorusKnotGeometry","Tube","TubeGeometry","Image","InstancedMesh","Points","Sprite","FbxModel","GltfModel","BokehPass","EffectComposer","FilmPass","FXAAPass","HalftonePass","RenderPass","SAOPass","SMAAPass","SSAOPass","TiltShiftPass","UnrealBloomPass","ZoomBlurPass"].forEach(t=>{e.component(t,br[t])})}};function vr(e){return _t(e).use(Ct)}const Et={"Precision from file":99,"0(1)":0,"0.1(1/2)":1,"0.01(1/4)":2,"0.001(1/8)":3,"0.0001(1/16)":4,"0.00001(1/32)":5,"0.000001(1/64)":6},xr=(e,t)=>e.toFixed(t===Et["Precision from file"]?2:t),C=class{static exportToGltf(e,t){C.exportToGltfOrGlb(e,t,{binary:!1})}static exportToGlb(e,t){C.exportToGltfOrGlb(e,t,{binary:!0})}static exportToGltfOrGlb(e,t,r={}){if(!e||!t)throw new Error("Invalid input or filename!");console.warn("Not implemented yet!")}static exportToObj(e,t){if(!e||!t)throw new Error("Invalid input or filename!");t=C.addExtention(t,C.EXTENSION_OBJ);const r=new Y3().parse(e);C.saveString(r,t)}static exportToDraco(e,t,r={}){if(!e||!t)throw new Error("Invalid input or filename!");t=C.addExtention(t,C.EXTENSION_DRACO);const i=new q3;r=Object.assign({},{encodeSpeed:5},r);const s=i.parse(e,r);C.saveArrayBuffer(s,t)}static exportToThreeJsJson(e,t){const r=e.toJSON();t.toLowerCase().endsWith(C.EXTENSION_JSON)||(t+=C.EXTENSION_JSON),C.saveJson(r,t)}static save(e,t){let r=C.downloadLink;r||(r=document.createElement("a"),r.style.display="none",document.body.appendChild(r),C.downloadLink=r),r.href=URL.createObjectURL(e),r.download=t,r.click()}static saveArrayBuffer(e,t){C.save(new Blob([e],{type:"application/octet-stream"}),t)}static saveJson(e,t){C.saveJsonString(JSON.stringify(e),t)}static saveJsonString(e,t){C.save(new Blob([e],{type:"application/json"}),t)}static saveString(e,t){C.save(new Blob([e],{type:"text/csv"}),t)}static addExtention(e,t){return e.toLowerCase().endsWith(t.toLowerCase())||(e+=t),e}};let g1=C;g1.EXTENSION_GLTF=".gltf",g1.EXTENSION_GLB=".glb",g1.EXTENSION_OBJ=".obj",g1.EXTENSION_DRACO=".drc",g1.EXTENSION_JSON=".json";class wr{static materialEquals(t,r){return t===r?!0:t instanceof c.Material&&r instanceof c.Material?t.type===r.type&&t.alphaTest===r.alphaTest&&t.opacity===r.opacity&&t.side===r.side&&t.visible===r.visible&&t.name===r.name&&t.transparent===r.transparent&&this.colorEquals(t.color,r.color)&&this.colorEquals(t.emissive,r.emissive)&&t.roughness===r.roughness&&t.metalness===r.metalness&&t.alphaMap===r.alphaMap:!1}static materialsEquals(t,r){if(t===r)return!0;if(Array.isArray(t)&&Array.isArray(r)&&t.length===r.length){for(let i=0;i<t.length;++i)if(!this.materialEquals(t[i],r[i]))return!1;return!0}else if(t instanceof c.Material&&r instanceof c.Material)return this.materialEquals(t,r);return!1}static colorEquals(t,r){return t===r?!0:t instanceof c.Color&&r instanceof c.Color?t.equals(r):!1}}const Sr=!1,M1=class{static resetObjectStyle(e){this.revertWireframeMode(e),this.revertObjectOpacity(e,[]),this.revertVisibleForFloors(e)}static resetObjectStyleByUuid(e,t){const r=this.getObjectByUuid(e,t);this.resetObjectStyle(r)}static setObjectOpacity(e,t=.3,r,i){const s=[],o=a=>{s.find(h=>h.uuid===a.uuid)||(s.push({uuid:a.uuid,opacity:a.opacity,transparent:a.transparent}),a.opacity*=t,a.transparent=!0)},n=a=>{const h=s.find(l=>l.uuid===a.uuid);if(!h){const l=a.clone();return s.push({uuid:a.uuid,opacity:a.opacity,transparent:a.transparent,material:a,clonedMaterial:l}),l.opacity*=t,l.transparent=!0,l}return h.clonedMaterial};return e.traverse(a=>{if(!(i&&i.indexOf(a.uuid)!==-1)&&!(r&&r.indexOf(a.uuid)===-1)&&a instanceof c.Mesh){const h=a;if(r){if(Array.isArray(h.material)){const l=[];h.material.forEach(y=>{const b=n(y);b&&l.push(b)}),h.material=l}else if(h.material){const l=n(h.material);l&&(h.material=l)}}else if(Array.isArray(h.material))h.material.forEach(l=>{o(l)});else if(h.material){const l=h.material;o(l)}}}),s}static revertObjectOpacity(e,t,r,i){const s=n=>{const a=t.find(h=>h.uuid===n.uuid);a?(n.opacity=a.opacity,n.transparent=a.transparent):n.opacity=1},o=n=>{const a=t.find(h=>h.clonedMaterial&&h.clonedMaterial.uuid===n.uuid);if(a)return a.material};e.traverse(n=>{if(!(i&&i.indexOf(n.uuid)!==-1)&&!(r&&r.indexOf(n.uuid)===-1)&&n instanceof c.Mesh){if(r){if(Array.isArray(n.material)){const a=[];n.material.forEach(h=>{const l=o(h);l&&a.push(l)}),n.material=a}else if(n.material){const a=o(n.material);a&&(n.material=a)}}else if(Array.isArray(n.material))n.material.forEach(a=>{s(a)});else if(n.material){const a=n.material;s(a)}}})}static setObjectOpacityByUuid(e,t,r=.3,i,s){const o=e.getObjectByProperty("uuid",t);if(!o)throw new Error(`Failed to find object by uuid: ${t}`);return M1.setObjectOpacity(o,r,i,s)}static revertObjectOpacityByUuid(e,t,r,i,s){const o=e.getObjectByProperty("uuid",t);if(!o)throw new Error(`Failed to find object by uuid: ${t}`);M1.revertObjectOpacity(o,r,i,s)}static explodeObject(e,t,r=!1){const i=new c.Vector3;$.getPositionCenter(t,i);const s=new F1(e,t.id,i);return s.setOnlyExplodeUp(r),s.explode(),s}static unexplodeObject(e){if(!e)throw new Error("Invalid exploder!");e.unexplode()}static setWireframeMode(e){const t=new c.MeshBasicMaterial({color:16732160,wireframe:!0,transparent:!0,opacity:.8});e.traverseVisible(r=>{if(r instanceof c.Mesh){const i=r;i.userData.materialForWireframe=i.material,i.material=t}})}static setWireframeModeByUuid(e,t){const r=e.getObjectByProperty("uuid",t);if(!r)throw new Error(`Failed to find object by uuid: ${t}`);M1.setWireframeMode(r)}static revertWireframeMode(e){e.traverseVisible(t=>{t instanceof c.Mesh&&t.userData.materialForWireframe&&(t.material=t.userData.materialForWireframe,t.userData.materialForWireframe=void 0)})}static revertWireframeModeByUuid(e,t){const r=e.getObjectByProperty("uuid",t);if(!r)throw new Error(`Failed to find object by uuid: ${t}`);M1.revertWireframeMode(r)}static findInner(e,t,r=[],i=!1){const s=t.toLowerCase(),o=[],n=l=>l.toLowerCase().indexOf(s)!==-1,a=l=>l.toString().indexOf(s)!==-1,h=l=>{if(l.name&&l.name.toLowerCase().indexOf(s)!==-1)return!0;if(l.gltfExtensions){const y=l.gltfExtensions,b=y.objectId&&y.objectId.Value||y.elementId&&y.elementId.Value;if(b&&b.toLowerCase().indexOf(s)!==-1)return!0}return!1};if(r.length>0)for(let l=0;l<r.length;++l){const y=r[l],b=e.getObjectByProperty("uuid",y);if(b&&b.traverse(B=>{(n(B.name)||a(B.id)||h(B.userData))&&o.push(B)}),i&&o.length>0)return[o[0]]}else if(e.traverse(l=>{(n(l.name)||a(l.id)||h(l.userData))&&o.push(l)}),i&&o.length>0)return[o[0]];return o}static find(e,t,r=[],i=!1){return this.findInner(e,t,r)}static findFirst(e,t,r=[],i=!1){const s=this.findInner(e,t,r,!0);if(s.length>0)return s[0]}static getFloorsFromString(e){const t=[],r=new RegExp(/(?:-?(?:\d+(?:\.5)?)F)(?=\W|$)/,"g").exec(e);return r&&r.length>0&&r.forEach(i=>{if(i){const s=i.replace("F",""),o=Number(s);o?t.push(o):console.log(`[OU] invalid floor: ${i}`)}}),t}static matchFloor(e,t){return this.getFloorsFromString(e).findIndex(r=>r===t)!==-1}static matchFloors(e,t){return this.getFloorsFromString(e).findIndex(r=>t.findIndex(i=>i===r)!==-1)!==-1}static distinctFloors(e,t){const r=[],i=s=>{this.getFloorsFromString(s).forEach(o=>{r[o]=!0})};return t.forEach(s=>{const o=e.getObjectByProperty("uuid",s);o&&o.traverse(n=>{if(i(n.name),n.userData.gltfExtensions){const a=n.userData.gltfExtensions;a.level&&a.level.Value&&i(a.level.Value)}})}),Object.keys(r).sort()}static traverseObjectByFloors(e,t,r,i,s){const o=e.getObjectByProperty("uuid",t);if(!o)return[];o.traverse(n=>{let a=this.matchFloors(n.name,r);if(!a&&n.userData&&n.userData.gltfExtensions){const h=n.userData.gltfExtensions;h.level&&h.level.Value&&(a=this.matchFloors(h.level.Value,r))}a&&i&&i(n),!a&&s&&s(n)})}static setVisibleForFloors(e,t,r,i=!0){this.traverseObjectByFloors(e,t,r,s=>{let o=s;for(;o;)o.visible=!0,o=o.parent||void 0},s=>{i&&(s.visible=!1)})}static revertVisibleForFloors(e){e.traverse(t=>{t.visible=!0})}static revertVisibleForFloorsByUuid(e,t){const r=this.getObjectByUuid(e,t);this.revertVisibleForFloors(r)}static getObjectByUuid(e,t){const r=e.getObjectByProperty("uuid",t);if(!r)throw new Error(`Failed to find object by uuid: ${t}`);return r}static addOutlines(e,t=this.OUTLINE_MATERIAL.clone(),r={visibleOnly:!0,meshOnly:!0,replaceOriginalObject:!1}){if(!e)return[];if(e.children.length===0&&(r.visibleOnly&&!e.visible||r.meshOnly&&!(e instanceof c.Mesh)))return[];const i=e,s=i.children.length;if(s>0)for(let a=s-1;a>=0;--a){const h=i.children[a];this.addOutlines(h,t,r).forEach(l=>l.applyMatrix4(i.matrixWorld))}if(!i.geometry)return[];const o=(a,h)=>{const l=new c.EdgesGeometry(a,5);l.applyMatrix4(h);const y=new c.LineSegments(l,t);return y.userData.selectable=!1,y.userData.isOutline=!0,y.matrixAutoUpdate=Sr,y.updateMatrix(),y},n=[];if(i instanceof c.InstancedMesh)for(let a=0;a<i.count;++a){const h=new c.Matrix4;i.getMatrixAt(a,h);const l=o(i.geometry,h);r.replaceOriginalObject&&i.parent?i.parent.children.push(l):i.children.push(l),n.push(l)}else{const a=o(i.geometry,i.matrix);r.replaceOriginalObject&&i.parent?(i.removeFromParent(),i.geometry.dispose(),i.parent.children.push(a)):i.children.push(a),n.push(a)}return n}static removeOutlines(e){if(!(!e||!Array.isArray(e.children)))for(let t=e.children.length-1;t>=0;--t){const r=e.children[t];r.children.length>0&&this.removeOutlines(r),r.userData.isOutline&&e.remove(r)}}static hasOutline(e){let t=!1;for(let r=0;r<e.children.length;++r){const i=e.children[r];if(i.userData.isOutline){t=!0;break}if(i.children.length>0&&(t=this.hasOutline(i),t))break}return t}static setOutlinesVisibility(e,t){e.traverse(r=>{r.userData.isOutline&&(r.visible=t)})}};let jt=M1;jt.OUTLINE_MATERIAL=new c.LineBasicMaterial({name:"outline",color:0,transparent:!0,opacity:.2});class Lt{static async createEnvTextureFromDataArray(t,r=this.HDR_CITY_STREET_64x32,i=64,s=32){if(t){const o=new c.DataTexture(r,i,s);o.flipY=!0,o.magFilter=c.LinearFilter,o.minFilter=c.LinearFilter,o.type=c.HalfFloatType,o.version=1;const n=t.fromEquirectangular(o).texture;return t.dispose(),Promise.resolve(n)}return Promise.reject(new Error("Invalid pmremGenerator!"))}}Lt.HDR_CITY_STREET_64x32=Uint16Array.from([11910,12340,1279715360,11926,12348,12806,15360,11958,12364,12814,15360,11974,12380,1283015360,11958,12364,12822,15360,11926,12348,12797,15360,11878,12324,1277315360,11830,12308,12749,15360,11798,12292,12733,15360,11782,12279,1272515360,11765,12263,12709,15360,11749,12247,12701,15360,11733,12231,1270115360,11701,12215,12693,15360,11685,12199,12685,15360,11685,12199,1268515360,11701,12215,12693,15360,11717,12231,12701,15360,11733,12247,1270915360,11749,12263,12717,15360,11749,12279,12717,15360,11765,12279,1272515360,11765,12279,12725,15360,11765,12292,12725,15360,11798,12300,1273315360,11830,12316,12749,15360,11846,12324,12757,15360,11894,12340,1278115360,11926,12356,12797,15360,11942,12356,12797,15360,11926,12348,1278915360,11926,12348,12789,15360,11942,12356,12797,15360,11942,12356,1279715360,11942,12348,12806,15360,11942,12356,12806,15360,11942,12356,1281415360,11958,12372,12830,15360,11974,12372,12830,15360,11974,12372,1283815360,11990,12388,12854,15360,12055,12420,12886,15360,12119,12452,1291815360,12167,12476,12950,15360,12231,12500,12982,15360,12263,12516,1299815360,12231,12500,12974,15360,12199,12484,12958,15360,12199,12484,1295815360,12199,12492,12966,15360,12247,12508,12982,15360,12247,12508,1299015360,12231,12500,12982,15360,12199,12484,12966,15360,12167,12468,1294215360,12119,12444,12918,15360,12087,12436,12902,15360,12055,12420,1288615360,12055,12412,12878,15360,12039,12412,12878,15360,12022,12396,1286215360,12006,12388,12846,15360,11958,12364,12830,15360,11910,12340,1280615360,12119,12508,13103,15360,12087,12484,13071,15360,12055,12468,1304615360,12006,12436,13006,15360,11926,12396,12958,15360,11878,12364,1292615360,11846,12348,12894,15360,11782,12308,12854,15360,11749,12292,1283015360,11717,12263,12814,15360,11685,12247,12806,15360,11669,12215,1278915360,11685,12231,12789,15360,11701,12247,12797,15360,11701,12247,1280615360,11717,12263,12814,15360,11749,12292,12822,15360,11782,12308,1283815360,11798,12316,12846,15360,11814,12332,12862,15360,11846,12340,1287015360,11862,12348,12878,15360,11846,12340,12870,15360,11846,12340,1286215360,11878,12356,12886,15360,11910,12372,12910,15360,11942,12396,1293415360,11958,12412,12958,15360,12039,12452,12998,15360,12071,12468,1302215360,12039,12452,12998,15360,12039,12452,12998,15360,12006,12444,1300615360,11974,12436,12998,15360,11942,12412,12982,15360,11926,12396,1297415360,11926,12404,12974,15360,11958,12420,12998,15360,12006,12452,1303815360,12055,12476,13071,15360,12039,12476,13079,15360,12087,12508,1312715360,12247,12597,13231,15360,12388,12693,13332,15360,12420,12741,1336415360,12436,12757,13372,15360,12468,12773,13380,15360,12500,12806,1338815360,12516,12822,13404,15360,12629,12934,13452,15360,12741,13046,1350815360,12806,13095,13532,15360,12757,13046,13516,15360,12645,12950,1346015360,12565,12870,13428,15360,12532,12838,13412,15360,12549,12854,1341215360,12516,12838,13396,15360,12452,12757,13356,15360,12420,12725,1334015360,12404,12709,13332,15360,12372,12677,13316,15360,12279,12589,1320715360,12135,12516,13119,15360,12388,12709,13348,15360,12247,12581,1322315360,12055,12476,13087,15360,11910,12388,12982,15360,11733,12308,1288615360,11669,12247,12846,15360,11621,12199,12814,15360,11541,12103,1276515360,11492,12055,12733,15360,11508,12055,12733,15360,11476,12022,1271715360,11525,12055,12725,15360,11589,12135,12757,15360,11669,12199,1276515360,11765,12292,12814,15360,11862,12348,12886,15360,11910,12372,1291015360,12006,12420,12966,15360,12071,12452,12998,15360,12119,12476,1302215360,12167,12492,13046,15360,12183,12500,13063,15360,12199,12524,1307915360,12308,12589,13151,15360,12300,12581,13151,15360,12167,12516,1308715360,12087,12468,13030,15360,12022,12444,13014,15360,11990,12420,1299015360,11974,12420,12990,15360,11974,12420,12990,15360,11990,12436,1301415360,11990,12444,13030,15360,12103,12500,13103,15360,12087,12508,1311115360,12039,12484,13103,15360,12039,12476,13103,15360,11942,12436,1305415360,11974,12452,13087,15360,12039,12492,13135,15360,12103,12532,1319915360,12183,12581,13263,15360,12308,12661,13340,15360,12484,12822,1343615360,12613,12918,13484,15360,12725,13046,13540,15360,13046,13332,1367715360,13143,13380,13717,15360,13223,13420,13741,15360,13396,13540,1386215360,13436,13589,13902,15360,13484,13629,13942,15360,13468,13621,1393415360,13412,13564,13878,15360,13372,13524,13846,15360,13287,13452,1378115360,13223,13428,13749,15360,13340,13492,13805,15360,13239,13428,1374915360,13095,13364,13685,15360,12918,13223,13597,15360,12822,13111,1355615360,12613,12934,13468,15360,12532,12854,13428,15360,12565,12870,1344415360,12468,12789,13396,15360,12372,12693,13340,15360,12087,12492,1311115360,11846,12364,12958,15360,11717,12300,12878,15360,11557,12135,1278115360,11476,12055,12741,15360,11460,12022,12725,15360,11476,12022,1272515360,11476,12022,12709,15360,11476,11958,12605,15360,11364,11733,1233215360,11111,11412,11661,15360,11223,11476,11773,15360,11388,11669,1209515360,11765,12119,12492,15360,12388,12613,13079,15360,12661,12902,1335615360,12998,13255,13564,15360,13372,13508,13797,15360,13412,13548,1384615360,13287,13436,13725,15360,13271,13428,13709,15360,13287,13428,1371715360,13014,13287,13597,15360,12709,12998,13460,15360,12452,12741,1333215360,12364,12653,13271,15360,12404,12693,13316,15360,12420,12709,1331615360,12420,12709,13332,15360,12263,12589,13231,15360,12332,12661,1331215360,12300,12629,13295,15360,12263,12605,13287,15360,12231,12597,1327915360,12247,12613,13303,15360,12231,12597,13295,15360,12231,12605,1331215360,12199,12597,13324,15360,12231,12613,13340,15360,12516,12870,1346815360,12725,13063,13564,15360,12741,13079,13573,15360,12854,13175,1361315360,12902,13223,13629,15360,13046,13348,13693,15360,13356,13516,1384615360,13605,13765,14078,15360,13717,13870,14191,15360,13765,13918,1425515360,13765,13910,14247,15360,13701,13854,14191,15360,13573,13733,1407015360,13508,13677,14006,15360,13380,13548,13886,15360,13111,13380,1374115360,13063,13348,13709,15360,12886,13207,13629,15360,12725,13046,1354815360,12645,12966,13508,15360,12677,12982,13508,15360,12629,12950,1349215360,12452,12789,13412,15360,12324,12661,13332,15360,12356,12677,1334015360,12388,12693,13348,15360,12279,12597,13247,15360,11894,12396,1299815360,11637,12231,12846,15360,11573,12135,12789,15360,11589,12151,1279715360,11621,12167,12797,15360,11637,12119,12677,15360,11079,11404,1169315360,10517,10701,10653,15360,10252,10348,10007,15360,9902,9999,9428,153609846,9886,9047,15360,10135,10260,9685,15360,10412,10533,10412,15360,1126811436,11549,15360,12364,12605,13087,15360,12444,12709,13255,15360,1254912822,13348,15360,12613,12886,13396,15360,12597,12886,13412,15360,1258112870,13404,15360,12661,12950,13460,15360,12725,13014,13492,15360,1307913332,13645,15360,12757,13046,13500,15360,12677,12982,13476,15360,1285413143,13556,15360,12693,12982,13492,15360,12581,12886,13452,15360,1270913030,13508,15360,12372,12709,13364,15360,12324,12661,13348,15360,1229212645,13340,15360,12292,12645,13348,15360,12468,12806,13436,15360,1253212854,13460,15360,12500,12854,13468,15360,12500,12854,13484,15360,1272513063,13589,15360,12982,13324,13701,15360,13111,13388,13741,15360,1301413340,13709,15360,13014,13332,13717,15360,13287,13476,13862,15360,1343613621,13974,15360,13532,13717,14095,15360,13725,13902,14295,15360,1394214103,14420,15360,13974,14135,14436,15360,13862,14022,14388,15360,1372513894,14295,15360,13789,13958,14336,15360,13830,13990,14348,15360,1337213548,13942,15360,13014,13332,13733,15360,12886,13239,13661,15360,1285413207,13637,15360,12757,13095,13589,15360,12757,13079,13573,15360,1264512982,13516,15360,12629,12966,13532,15360,12549,12870,13468,15360,1235612693,13372,15360,12151,12549,13231,15360,12215,12573,13247,15360,1219912565,13231,15360,12071,12492,13135,15360,12055,12468,13087,15360,1187812372,12958,15360,11685,12199,12781,15360,10774,11159,11412,15360,9533,96218870,15360,9308,9340,8071,15360,9276,9300,7878,15360,9324,9332,8420,153609191,9216,7991,15360,8950,8983,7766,15360,9493,9525,8677,15360,10252,1033210007,15360,10661,10846,10894,15360,10701,10926,10998,15360,10950,1127611428,15360,11364,11637,12063,15360,11958,12388,12926,15360,12183,1254013175,15360,12340,12645,13295,15360,12420,12693,13316,15360,12757,1303013460,15360,13046,13324,13645,15360,13095,13348,13677,15360,13303,1346013781,15360,13207,13404,13741,15360,13127,13372,13717,15360,13372,1352413862,15360,12693,13030,13540,15360,12725,13046,13548,15360,12468,1282213436,15360,12263,12629,13348,15360,12436,12773,13428,15360,12693,1299813524,15360,12725,13046,13564,15360,12645,12982,13556,15360,12613,1296613556,15360,12886,13255,13685,15360,13436,13629,14022,15360,13637,1381314231,15360,13621,13789,14215,15360,13878,14038,14412,15360,14022,1418314468,15360,13926,14119,14452,15360,14054,14231,14508,15360,14135,1431114540,15360,14348,14436,14669,15360,14460,14540,14749,15360,14404,1448414709,15360,14420,14500,14709,15360,14653,14717,14894,15360,14119,1427914508,15360,13484,13669,14078,15360,13063,13380,13773,15360,12677,1307913613,15360,12484,12886,13516,15360,12436,12822,13476,15360,12468,1283813476,15360,12039,12532,13316,15360,12231,12613,13340,15360,12468,1278913436,15360,12388,12725,13396,15360,12135,12557,13287,15360,12151,1255713271,15360,12039,12484,13175,15360,11878,12396,13038,15360,11814,1234812950,15360,11492,11894,12460,15360,9950,10103,9621,15360,8830,8838,722015360,8565,8533,7015,15360,8541,8501,6919,15360,8332,8300,6822,15360,84128372,7220,15360,8710,8701,7686,15360,9372,9404,8549,15360,9533,9621,907915360,9268,9292,8196,15360,9452,9460,8167,15360,9533,9581,8533,15360,97429870,9316,15360,11460,11814,12348,15360,11942,12388,12902,15360,11749,1216712573,15360,11300,11492,11621,15360,11974,12332,12669,15360,12436,1274113364,15360,12597,12886,13460,15360,12966,13271,13653,15360,12998,1330313669,15360,13476,13629,13974,15360,13733,13886,14239,15360,13364,1352413894,15360,13063,13356,13725,15360,12982,13287,13669,15360,12484,1280613444,15360,12565,12902,13500,15360,12950,13287,13693,15360,12934,1327113677,15360,12693,13046,13589,15360,12661,13030,13605,15360,12870,1327113717,15360,13348,13548,13966,15360,13621,13813,14271,15360,13797,1397414412,15360,13942,14119,14484,15360,14263,14388,14629,15360,14420,1450814733,15360,14460,14548,14773,15360,14982,15046,15231,15360,15564,1558015669,15360,15974,15982,16078,15360,15805,15821,15926,15360,15460,1547615572,15360,15436,15460,15556,15360,14781,14862,15127,15360,13621,1381314348,15360,12789,13207,13757,15360,12452,12886,13581,15360,12263,1270913476,15360,12039,12597,13396,15360,11942,12516,13340,15360,11846,1246813271,15360,11733,12380,13127,15360,11926,12460,13191,15360,12055,1252413263,15360,11878,12428,13159,15360,11605,12231,12886,15360,11412,1199012709,15360,11508,12103,12789,15360,11637,12231,12854,15360,10661,1107911380,15360,9541,9685,9252,15360,8573,8605,7493,15360,8404,8388,7348,153608830,8822,8212,15360,9308,9324,9095,15360,9324,9364,9220,15360,9047,91198653,15360,9023,9055,8404,15360,9055,9063,8167,15360,8870,8846,7541,153608862,8806,7380,15360,8950,8910,7252,15360,9268,9284,7557,15360,10316,1046810380,15360,11239,11476,11677,15360,10653,10942,11047,15360,9661,9814,932415360,10693,10958,11047,15360,11396,11653,11990,15360,11878,12292,1259715360,12468,12789,13396,15360,12773,13095,13589,15360,13364,13516,1389415360,13894,14054,14380,15360,13717,13870,14247,15360,13420,13589,1395815360,13255,13452,13830,15360,12806,13143,13637,15360,13159,13412,1383015360,13629,13813,14215,15360,13303,13500,13910,15360,13079,13396,1380515360,13191,13452,13878,15360,13412,13621,14062,15360,14103,14279,1454015360,14773,14854,15086,15360,14717,14805,15046,15360,14295,14420,1468515360,14380,14476,14733,15360,14572,14661,14902,15360,15596,15612,1570115360,16351,16335,16384,15360,16484,16476,16492,15360,16516,16500,1651615360,16388,16375,16404,15360,16054,16054,16118,15360,15918,15926,1600615360,15556,15572,15669,15360,14653,14725,14982,15360,13637,13838,1431915360,13412,13613,14054,15360,12870,13287,13789,15360,12404,12838,1352415360,12199,12677,13428,15360,12324,12741,13452,15360,11942,12516,1332415360,11765,12380,13111,15360,11428,11942,12589,15360,10886,11388,1190215360,10372,10717,11006,15360,9846,10240,10191,15360,10252,10549,1076615360,10613,11079,11484,15360,10581,10998,11388,15360,9613,9846,9629,153608525,8557,7541,15360,8605,8613,7814,15360,9292,9324,9079,15360,9388,93969220,15360,10709,10846,11031,15360,9894,9966,9854,15360,9252,9236,877415360,8822,8790,8183,15360,8292,8260,6533,15360,8111,8007,6324,15360,82288183,6405,15360,8501,8501,6565,15360,8814,8878,7172,15360,9260,9364,824415360,8902,9095,8252,15360,9444,9581,9047,15360,9509,9637,8790,15360,94779613,8806,15360,10725,11063,11079,15360,11508,11910,12356,15360,12484,1278913380,15360,12838,13159,13629,15360,13428,13589,13974,15360,14135,1427914484,15360,13942,14087,14396,15360,13677,13846,14247,15360,13436,1361314006,15360,13597,13781,14183,15360,14183,14340,14540,15360,14022,1421514484,15360,13637,13838,14271,15360,14038,14231,14508,15360,14380,1447614701,15360,14757,14854,15078,15360,15030,15111,15343,15360,15420,1545215556,15360,15476,15500,15588,15360,15351,15388,15492,15360,15572,1559615677,15360,15653,15669,15717,15360,15821,15821,15853,15360,15845,1584515869,15360,15998,15990,16022,15360,15926,15926,15974,15360,15653,1566915733,15360,15661,15677,15749,15360,15612,15629,15717,15360,15271,1533515452,15360,14484,14572,14821,15360,14215,14372,14588,15360,13468,1367714167,15360,12773,13175,13653,15360,12725,13143,13637,15360,12452,1288613532,15360,12263,12709,13444,15360,11894,12436,13103,15360,10252,1053310661,15360,8613,8693,7445,15360,8742,8782,7047,15360,8420,8412,6565,153607926,7910,6405,15360,8806,8854,7300,15360,9127,9228,8007,15360,8685,87507300,15360,8348,8356,6758,15360,8380,8340,7300,15360,8991,8918,8388,153609838,9790,9549,15360,10055,10127,10047,15360,9501,9493,9268,15360,9332,92928902,15360,9079,9007,8509,15360,8300,8260,7252,15360,8693,8701,8196,153608228,8212,7111,15360,8469,8501,7380,15360,8420,8501,6919,15360,8549,86456983,15360,8581,8661,6951,15360,9268,9332,7718,15360,9063,9207,7445,153609284,9380,7718,15360,9412,9557,8693,15360,10276,10517,10103,15360,1183012279,12589,15360,12725,13079,13589,15360,13127,13396,13773,15360,1408714231,14460,15360,13974,14119,14412,15360,13677,13854,14247,15360,1411914279,14500,15360,13990,14167,14460,15360,14364,14452,14653,15360,1456414653,14837,15360,14404,14492,14701,15360,14870,14942,15135,15360,1538815420,15500,15360,15207,15287,15420,15360,14797,14894,15127,15360,1527115335,15452,15360,15926,15942,15990,15360,16207,16207,16231,15360,1611816110,16126,15360,15741,15733,15741,15360,16239,16207,16175,15360,1644416460,16484,15360,16046,16022,16006,15360,15942,15950,15966,15360,1577315789,15829,15360,15789,15797,15845,15360,15693,15709,15757,15360,1554015564,15653,15360,15303,15364,15468,15360,14733,14813,15014,15360,1386214054,14420,15360,12838,13255,13725,15360,12789,13207,13693,15360,1246812918,13564,15360,12404,12838,13500,15360,11428,11862,12412,15360,9143,92768388,15360,8541,8533,6726,15360,8444,8428,6629,15360,8212,8183,6597,153608388,8380,7015,15360,8726,8710,6758,15360,8332,8316,6437,15360,8453,84286565,15360,8597,8605,7814,15360,8701,8661,8151,15360,9452,9396,9015,1536010581,10557,10380,15360,10950,10974,10846,15360,10380,10356,10252,1536010749,10741,10685,15360,9870,9854,9693,15360,9023,9039,8669,15360,8790,88548509,15360,8196,8167,7332,15360,7975,8015,7079,15360,8589,8750,7445,153609095,9260,7111,15360,8983,9135,7188,15360,8902,8991,7252,15360,8862,90077015,15360,8967,9111,7300,15360,8742,8878,7493,15360,9557,9999,9549,1536011292,11613,11862,15360,12135,12468,12982,15360,12215,12460,12878,1536013356,13468,13685,15360,13821,13934,14199,15360,13548,13701,14022,1536014103,14263,14468,15360,14279,14388,14572,15360,14364,14452,14645,1536014709,14789,14950,15360,15143,15199,15327,15360,15388,15412,15468,1536015476,15500,15548,15360,15420,15444,15492,15360,15436,15460,15516,1536015612,15637,15685,15360,16086,16086,16110,15360,16396,16388,16396,1536016094,16094,16110,15360,15869,15861,15861,15360,16135,16110,16070,1536016428,16420,16404,15360,15588,15556,15524,15360,15484,15500,15508,1536015335,15364,15396,15360,15677,15685,15717,15360,15604,15621,15661,1536015420,15444,15500,15360,15303,15372,15452,15360,14717,14805,14998,1536014412,14508,14701,15360,13548,13765,14199,15360,13271,13508,13942,1536012661,13159,13709,15360,12468,12854,13436,15360,10260,10484,10509,153608613,8669,6951,15360,8151,8143,6469,15360,8653,8629,7814,15360,8469,84447541,15360,8718,8693,7814,15360,8372,8332,6597,15360,8356,8308,7111,153609047,8983,8396,15360,8822,8798,8308,15360,9372,9348,8967,15360,10364,1036410183,15360,10268,10260,9894,15360,10541,10533,10468,15360,10380,1036410276,15360,10621,10613,10549,15360,9910,9942,9758,15360,8364,8380,762115360,8581,8637,8135,15360,8252,8300,7573,15360,8119,8175,7300,15360,83728453,7493,15360,8420,8501,6983,15360,8742,8822,7573,15360,8782,8854,815115360,8581,8661,7079,15360,9220,9268,8340,15360,9549,9645,8854,15360,1171711950,12127,15360,12468,12741,13207,15360,12709,12966,13388,15360,1230012508,12886,15360,12492,12709,13063,15360,13239,13372,13548,15360,1247612597,12814,15360,13581,13685,13878,15360,14476,14548,14685,15360,1455614629,14773,15360,14765,14829,14966,15360,15159,15207,15303,15360,1537215396,15444,15360,15516,15532,15572,15360,15653,15661,15693,15360,1582915837,15853,15360,16022,16014,16022,15360,16311,16295,16279,15360,1634316319,16303,15360,16412,16388,16359,15360,15813,15797,15773,15360,1306313151,13183,15360,11484,11701,11798,15360,12300,12412,12468,15360,1461314637,14653,15360,11974,12215,12316,15360,14135,14215,14303,15360,1560415629,15677,15360,15524,15548,15596,15360,15351,15380,15428,15360,1479714894,15054,15360,13990,14231,14500,15360,13492,13709,14070,15360,1288613316,13701,15360,12613,13207,13749,15360,11525,11974,12428,15360,9284,94128629,15360,8597,8653,6951,15360,7806,7790,6292,15360,7589,7541,6437,153607485,7437,6597,15360,7453,7404,6180,15360,7774,7686,6565,15360,8300,82607332,15360,9918,9942,9862,15360,10348,10372,10231,15360,9725,9709,922815360,10613,10621,10509,15360,10199,10175,9838,15360,10380,10388,1034015360,11207,11255,11284,15360,10661,10717,10725,15360,10103,10135,995015360,8444,8436,7669,15360,8469,8501,7445,15360,8950,9111,8854,15360,94859798,10071,15360,8364,8501,8039,15360,7959,7951,6806,15360,8597,8605,803915360,8501,8533,7557,15360,8758,8830,7509,15360,10758,10830,10693,1536011508,11605,11621,15360,13524,13669,13886,15360,13830,14022,14327,1536013926,14103,14364,15360,13460,13621,13886,15360,12854,13191,13420,1536013597,13733,13926,15360,13846,13990,14223,15360,13773,13942,14199,1536013910,14087,14356,15360,13813,14022,14319,15360,14247,14396,14540,1536014693,14765,14878,15360,15223,15279,15343,15360,15508,15524,15540,1536015540,15548,15564,15360,15327,15335,15319,15360,15303,15311,15303,1536015918,15910,15886,15360,16247,16207,16151,15360,16175,16143,16086,1536014436,14452,14436,15360,12263,12380,12404,15360,11476,11701,11773,1536012380,12492,12532,15360,14797,14797,14757,15360,11372,11589,11677,1536012597,12934,13356,15360,13990,14364,14725,15360,14183,14444,14773,1536014231,14444,14717,15360,14412,14532,14709,15360,14054,14199,14380,1536012372,12500,12605,15360,12199,12565,13006,15360,12581,13175,13653,1536010055,10380,10324,15360,8557,8573,6726,15360,8167,8196,6533,15360,7517,74856119,15360,7244,7172,5798,15360,7071,6959,5718,15360,7669,7581,6260,153608661,8605,7975,15360,10942,11079,11151,15360,12573,12741,13014,15360,1190212030,12191,15360,10308,10332,10135,15360,11255,11300,11284,15360,1127611348,11396,15360,10055,10215,10292,15360,12183,12332,12468,15360,9918,99669798,15360,8734,8742,8196,15360,8967,8950,8469,15360,10260,10276,1003915360,9734,9758,9605,15360,9388,9404,9308,15360,7943,7878,7095,15360,77267637,6645,15360,8047,7983,7204,15360,9284,9236,8693,15360,9621,9565,914315360,11255,11268,11047,15360,13175,13332,13420,15360,13773,13934,1417515360,13854,14022,14271,15360,13870,14038,14279,15360,13388,13516,1367715360,12279,12629,12966,15360,13348,13452,13564,15360,13821,13918,1405415360,13701,13846,14022,15360,13460,13605,13781,15360,13492,13637,1382115360,13709,13821,13950,15360,14372,14428,14476,15360,14516,14572,1461315360,14741,14789,14813,15360,14725,14749,14749,15360,13452,13484,1346815360,13476,13500,13492,15360,14990,15022,15022,15360,14556,14572,1456415360,15094,15111,15094,15360,13231,13287,13215,15360,11255,11380,1117515360,10677,10886,10492,15360,11846,12006,11934,15360,14327,14340,1427915360,10766,11039,10862,15360,12918,13255,13452,15360,14231,14548,1488615360,13878,14380,14765,15360,13444,13862,14412,15360,12151,12404,1262115360,12637,12902,13215,15360,11549,11749,11870,15360,12279,12653,1311915360,13223,13404,13516,15360,9228,9260,8276,15360,8087,7991,6308,153607918,7814,6919,15360,7469,7364,6148,15360,7485,7380,6212,15360,8228,79917204,15360,9276,8967,8212,15360,9806,9573,8742,15360,10135,10087,9621,1536011452,11452,11452,15360,10629,10637,10509,15360,10693,10733,10637,1536011095,11111,10982,15360,11292,11348,11372,15360,10199,10244,10167,1536010814,10926,10846,15360,8669,8774,7493,15360,7870,7910,6244,15360,8204,81836919,15360,9806,9758,9159,15360,9460,9436,8629,15360,9159,9087,8260,153607637,7509,6790,15360,7758,7629,6838,15360,7967,7918,6774,15360,10854,1074910501,15360,11508,11412,11316,15360,12372,12300,12151,15360,12030,1211912063,15360,12781,12910,12982,15360,13476,13581,13661,15360,13484,1358913677,15360,12404,12428,12380,15360,11605,11765,11798,15360,11492,1153311452,15360,11838,11886,11798,15360,12263,12372,12380,15360,12151,1223112175,15360,11492,11508,11412,15360,11119,11111,10838,15360,12508,1258112573,15360,12621,12693,12677,15360,12573,12629,12589,15360,12292,1232412231,15360,12476,12565,12573,15360,11998,12159,12215,15360,12950,1307113159,15360,12263,12372,12428,15360,12380,12428,12444,15360,11300,1130811143,15360,10199,10244,9734,15360,9709,9701,9252,15360,10492,10581,1040415360,11476,11516,11388,15360,9477,9517,8790,15360,11717,11854,11838,1536014247,14420,14524,15360,14054,14311,14436,15360,13597,13805,13982,1536011364,11533,11597,15360,12263,12428,12549,15360,11436,11605,11653,1536013079,13324,13444,15360,12516,12613,12605,15360,10039,10015,9605,15360,86938621,7878,15360,7951,7862,6902,15360,8196,8204,7015,15360,8677,8589,763715360,9284,9031,8340,15360,9814,9605,8902,15360,10685,10428,9910,1536010492,10260,9685,15360,9404,9252,7943,15360,8830,8766,7220,15360,9220,90477943,15360,9693,9669,9015,15360,11412,11468,11372,15360,11135,11159,1102315360,10087,10055,9428,15360,9910,10007,9621,15360,9236,9300,8934,153609597,9557,8902,15360,10669,10549,9782,15360,9926,9870,9127,15360,9894,99189047,15360,8685,8742,7910,15360,9958,10167,10284,15360,10215,10332,1039615360,11396,11428,11452,15360,11223,11255,11300,15360,11814,11862,1195815360,10685,10846,10870,15360,10340,10380,10007,15360,11175,11207,1089415360,12103,12207,12215,15360,11143,11103,10902,15360,9910,9966,9613,1536010015,10079,9493,15360,10806,10846,10517,15360,10862,10934,10637,1536010838,10942,10661,15360,10958,11087,10878,15360,10709,10838,10701,1536010669,10741,10589,15360,10581,10669,10525,15360,10252,10348,9974,1536011396,11500,11525,15360,11207,11255,11264,15360,10878,10910,10934,1536011031,11063,11159,15360,11292,11324,11396,15360,11223,11255,11300,1536010693,10685,10645,15360,10428,10420,10324,15360,10300,10252,9991,1536010838,10846,10798,15360,10428,10428,10364,15360,9669,9605,9380,15360,1016710244,10087,15360,11709,11854,11910,15360,11223,11284,11268,15360,1023110244,9878,15360,10199,10244,9862,15360,10183,10260,9942,15360,10525,1065310541,15360,12500,12597,12621,15360,11814,11741,11597,15360,11533,1146011175,15360,11103,11006,10557,15360,10444,10396,9846,15360,10007,10023,922815360,9653,9790,8469,15360,9316,9372,8039,15360,9557,9830,8071,15360,96219918,8071,15360,9677,10015,8167,15360,9991,10284,8420,15360,10215,104368581,15360,10260,10484,8645,15360,10292,10476,8902,15360,10324,10468,925215360,9910,9894,8886,15360,10525,10573,9701,15360,9782,10039,8581,153609565,9814,8167,15360,9950,10039,8934,15360,10749,10758,10199,15360,1066910685,10244,15360,10838,10838,10460,15360,11215,10910,10087,15360,1149211364,10806,15360,11095,11159,11055,15360,11364,11388,11356,15360,1102311039,10990,15360,11653,11653,11613,15360,11798,11725,11557,15360,1197411862,11637,15360,12039,11942,11765,15360,12119,12047,11934,15360,1215112071,11950,15360,12087,12006,11886,15360,12047,11966,11838,15360,1199011926,11790,15360,11974,11910,11798,15360,11998,11934,11814,15360,1211112039,11886,15360,12231,12143,11998,15360,12292,12199,12039,15360,1203911974,11846,15360,11822,11782,11653,15360,11862,11838,11765,15360,1179811765,11701,15360,11782,11733,11669,15360,11798,11749,11685,15360,1183811790,11725,15360,11870,11822,11749,15360,11741,11701,11621,15360,1156511541,11452,15360,11533,11500,11412,15360,11621,11581,11484,15360,1160511557,11460,15360,11516,11468,11372,15360,11565,11533,11444,15360,1167711637,11541,15360,11725,11661,11557,15360,11725,11661,11557,15360,1173311669,11573,15360,11838,11773,11677,15360,11998,11926,11814,15360,1201411926,11798,15360,11460,11404,11332,15360,11637,11557,11428,15360,1201411894,11693,15360,12167,12022,11765,15360,12119,11982,11709,15360,1192611806,11516,15360,11685,11589,11300,15360,11476,11404,10886,15360,1123911151,10468,15360,10766,10733,9894,15360,10565,10565,9589,15360,10436,104449332,15360,10308,10308,9031,15360,10308,10316,8999,15360,10199,10244,877415360,9725,9645,8549,15360,10244,10276,8967,15360,10878,10838,10183,1536011055,10966,10348,15360,11119,11006,10404,15360,11264,11135,10565,1536011404,11316,10822,15360,11492,11388,10982,15360,11798,11613,11223,1536012047,11830,11412,15360,12039,11894,11597,15360,12127,11990,11693,1536012127,11990,11725,15360,12191,12055,11806,15360,12191,12055,11830,1536011870,11773,11613,15360,11573,11516,11428,15360,11533,11484,11412,1536011541,11492,11420,15360,11565,11516,11452,15360,11589,11541,11476,1536011605,11557,11500,15360,11637,11589,11533,15360,11669,11621,11557,1536011701,11645,11573,15360,11733,11669,11589,15360,11798,11717,11605,1536011838,11749,11621,15360,11878,11782,11661,15360,11894,11798,11661,1536011926,11806,11653,15360,11958,11822,11661,15360,11982,11846,11677,1536012006,11870,11685,15360,12095,11950,11765,15360,12047,11910,11741,1536011886,11765,11605,15360,11838,11733,11589,15360,11814,11717,11589,1536011814,11709,11573,15360,11790,11693,11565,15360,11741,11677,11589,1536011733,11677,11613,15360,11733,11685,11629,15360,11717,11669,11621,1536011685,11645,11589,15360,11629,11589,11533,15360,11573,11525,11468,1536011492,11444,11380,15360,11316,11255,11111,15360,11348,11292,11143,1536011516,11436,11316,15360,11854,11749,11589,15360,12127,11990,11765,1536012199,12055,11782,15360,12340,12231,11910,15360,12372,12292,11958,1536012380,12300,11974,15360,12348,12247,11910,15360,12324,12215,11878,1536012247,12103,11773,15360,12095,11958,11637,15360,12055,11926,11613,1536011974,11854,11541,15360,11870,11765,11468,15360,11966,11854,11541,1536012300,12151,11846,15360,12396,12316,12006,15360,12388,12308,11990,1536012388,12308,12006,15360,12396,12316,12022,15360,12396,12308,12022,1536012396,12308,12022,15360,12364,12279,11974,15360,12340,12247,11942,1536012340,12231,11926,15360,12215,12071,11806,15360,12095,11966,11749,1536011741,11645,11500,15360,11420,11356,11255,15360,11364,11308,11207,1536011356,11300,11175,15360,11348,11292,11191,15360,11372,11324,11255,1536011412,11364,11308,15360,11420,11372,11316,15360,11428,11380,11324,1536011444,11388,11332,15360,11484,11428,11364,15360,11508,11460,11396,1536011557,11500,11436,15360,11589,11533,11460,15360,11613,11557,11484,1536011621,11557,11492,15360,11613,11557,11500,15360,11621,11557,11500,1536011629,11573,11508,15360,11629,11573,11508,15360,11605,11557,11484,1536011589,11533,11468,15360,11557,11508,11436,15360,11549,11500,11428,1536011557,11500,11436,15360,11549,11492,11436,15360,11533,11484,11428,1536011525,11476,11428,15360,11516,11476,11428,15360,11525,11484,11444,1536011516,11476,11428,15360,11468,11428,11380,15360,11428,11388,11332,1536011356,11308,11239,15360,11308,11255,11127,15360,11167,11071,10926,1536011223,11119,10966,15360,11276,11175,10998,15360,11404,11332,11191,1536011773,11693,11557,15360,11926,11798,11613,15360,12207,12039,11773,1536012348,12231,11894,15360,12308,12151,11846,15360,12332,12215,11894,1536012364,12279,11958,15360,12380,12292,11974,15360,12396,12316,12022,1536012404,12316,12039,15360,12412,12332,12087,15360,12412,12332,12103,1536012436,12356,12135,15360,12372,12292,12039,15360,12420,12332,12087,1536012396,12316,12055,15360,12356,12263,11990,15360,12340,12231,11942,1536012271,12127,11854,15360,12215,12071,11814,15360,12292,12135,11878,1536012288,12135,11870,15360,12111,11982,11765,15360,11990,11886,11717,1536011637,11557,11428,15360,11364,11300,11143,15360,11316,11239,11079,1536011300,11207,11047,15360,11268,11159,11015,15360,11268,11159,11015,1536011268,11159,11031,15360,11300,11223,11095,15360,11340,11292,11191,1536011348,11300,11223,15360,11372,11324,11255,15360,11380,11332,11255,1536011372,11316,11239,15360,11396,11340,11268,15360,11468,11404,11300,1536011460,11404,11324,15360,11484,11428,11356,15360,11492,11436,11372,1536011500,11444,11388,15360,11508,11460,11404,15360,11500,11452,11396,1536011492,11436,11380,15360,11468,11412,11356,15360,11444,11388,11324,1536011444,11388,11324,15360,11428,11380,11316,15360,11412,11356,11300,1536011404,11348,11300,15360,11404,11356,11308,15360,11396,11356,11308,1536011388,11348,11308,15360,11372,11340,11292,15360,11348,11308,11255,1536011284,11223,11111,15360,11231,11143,11023,15360,11199,11111,10974,1536011047,10958,10814,15360,11127,11023,10870,15360,11119,11006,10846,1536011175,11055,10886,15360,11292,11191,10998,15360,11525,11404,11284,1536011822,11637,11476,15360,11878,11733,11549,15360,11918,11790,11573,1536012063,11918,11653,15360,12223,12063,11765,15360,12300,12151,11846,1536012255,12103,11814,15360,12271,12127,11846,15360,12271,12127,11862,1536012271,12127,11886,15360,12308,12183,11942,15360,12175,12039,11814,1536012063,11934,11709,15360,12159,12014,11765,15360,12215,12063,11798,1536012143,11998,11757,15360,12071,11934,11693,15360,11998,11870,11661,1536011974,11870,11685,15360,11998,11910,11757,15360,11846,11765,11629,1536011468,11396,11284,15360,11308,11223,11031,15360,11215,11103,10934,1536011207,11095,10942,15360,11215,11103,10950,15360,11191,11087,10942,1536011175,11079,10942,15360,11167,11063,10934,15360,11143,11031,10902,1536011247,11143,11015,15360,11284,11191,11079,15360,11300,11223,11095,1536011316,11268,11127,15360,11340,11284,11143,15360,11340,11284,11159,1536011356,11300,11191,15360,11372,11316,11239,15360,11380,11324,11255,1536011372,11316,11255,15360,11380,11324,11276,15360,11380,11324,11268,1536011372,11316,11255,15360,11364,11316,11255,15360,11364,11308,11239,1536011348,11292,11207,15360,11340,11284,11191,15360,11348,11292,11191,1536011348,11292,11207,15360,11340,11292,11207,15360,11340,11292,11207,1536011324,11276,11207,15360,11308,11255,11175,15360,11264,11175,11079,1536011119,11039,10934,15360,11103,11015,10902,15360,11095,11006,10878,1536011031,10942,10806,15360,10990,10902,10766,15360,11047,10942,10814,1536011031,10926,10790,15360,11055,10942,10806,15360,11119,10998,10846,1536011151,11015,10830,15360,11268,11095,10886,15360,11484,11396,11268,1536011790,11701,11549,15360,11886,11790,11637,15360,11838,11741,11581,1536011838,11725,11541,15360,11902,11782,11581,15360,11966,11838,11629,1536011974,11846,11629,15360,11958,11838,11629,15360,11950,11838,11637,1536011814,11701,11525,15360,11581,11492,11332,15360,11645,11541,11380,1536011806,11701,11533,15360,11902,11806,11637,15360,11950,11862,11717,1536012014,11934,11790,15360,11942,11862,11725,15360,11565,11492,11388,1536011292,11191,11015,15360,11231,11111,10950,15360,11159,11047,10894,1536011119,11006,10854,15360,11127,11023,10878,15360,11159,11055,10902,1536011135,11031,10894,15360,11111,11006,10878,15360,11095,10990,10870,1536011095,10998,10886,15360,11071,10966,10846,15360,11111,11006,10902,1536011191,11095,10974,15360,11268,11159,11031,15360,11284,11191,11063,1536011292,11207,11063,15360,11300,11223,11079,15360,11332,11268,11143,1536011316,11255,11127,15360,11316,11255,11143,15360,11308,11239,11127,1536011316,11255,11159,15360,11300,11223,11127,15360,11292,11207,11095,1536011300,11223,11111,15360,11300,11223,11095,15360,11300,11223,11095,1536011308,11239,11111,15360,11300,11223,11111,15360,11292,11207,11111,1536011264,11167,11071,15360,11215,11127,11047,15360,11135,11055,10966,1536011015,10934,10846,15360,10918,10838,10733,15360,10982,10894,10782,1536010974,10886,10766,15360,10982,10894,10766,15360,10958,10862,10749,1536010982,10886,10774,15360,10958,10862,10758,15360,10958,10862,10749,1536011015,10910,10790,15360,11023,10910,10774,15360,11079,10958,10806,1536011103,10974,10798,15360,11191,11047,10846,15360,11468,11388,11276,1536011846,11765,11637,15360,12006,11918,11782,15360,11998,11910,11782,1536011902,11822,11693,15360,11838,11749,11637,15360,11782,11709,11605,1536011806,11741,11645,15360,11782,11717,11629,15360,11773,11717,11621,1536011870,11806,11701,15360,11942,11862,11757,15360,12183,12103,11974,1536011974,11894,11765,15360,11476,11404,11308,15360,11268,11143,10966,1536011183,11063,10902,15360,11111,10998,10854,15360,11055,10942,10806,1536011023,10910,10766,15360,11047,10934,10782,15360,11039,10926,10782,1536011079,10966,10830,15360,11031,10918,10782,15360,11031,10926,10806,1536010990,10894,10782,15360,10974,10886,10790,15360,10966,10870,10774,1536011006,10902,10806,15360,11039,10942,10838,15360,11127,11023,10910,1536011175,11079,10958,15360,11191,11087,10958,15360,11207,11095,10958,1536011268,11143,11015,15360,11276,11175,11047,15360,11284,11191,11079,1536011292,11191,11079,15360,11276,11175,11079,15360,11239,11135,11031,1536011268,11159,11047,15360,11215,11111,11006,15360,11239,11127,11015,1536011255,11143,11031,15360,11223,11119,11015,15360,11199,11103,10998,1536011175,11087,10982,15360,11143,11047,10958,15360,11031,10942,10854,1536010958,10878,10790,15360,10910,10830,10741,15360,10942,10862,10758,1536010926,10838,10733,15360,10854,10758,10637,15360,10918,10830,10709,1536010910,10822,10717,15360,10942,10846,10749,15360,10942,10854,10741,1536010942,10854,10749,15360,10966,10870,10758,15360,10966,10870,10758,1536010958,10854,10733,15360,10998,10886,10741,15360,10942,10830,10677,1536011039,10918,10749,15360,11095,10974,10806,15360,11308,11223,11031,1536011468,11396,11292,15360,11605,11533,11428,15360,11701,11621,11525,1536011693,11629,11541,15360,11685,11621,11549,15360,11685,11629,11549,1536011629,11565,11484,15360,11589,11533,11444,15360,11364,11308,11191,1536011191,11087,10958,15360,11135,11031,10902,15360,11135,11031,10894,1536011055,10950,10830,15360,11015,10910,10782,15360,10958,10854,10733,1536010942,10838,10717,15360,10974,10870,10733,15360,10982,10878,10749,1536010990,10886,10758,15360,11015,10910,10798,15360,10966,10862,10758,1536010950,10854,10758,15360,10910,10822,10733,15360,10894,10798,10709,1536010902,10814,10725,15360,10934,10846,10758,15360,10910,10822,10733,1536010950,10854,10749,15360,10974,10878,10766,15360,11047,10942,10830,1536011095,10990,10878,15360,11167,11055,10942,15360,11199,11103,10990,1536011191,11087,10982,15360,11151,11047,10950,15360,11135,11031,10934,1536011095,10998,10902,15360,11143,11047,10950,15360,11079,10990,10894,1536011079,10990,10902,15360,11103,11006,10910,15360,11079,10982,10886,1536011023,10926,10822,15360,10982,10894,10798,15360,10958,10870,10782,1536010910,10814,10725,15360,10926,10838,10741,15360,10934,10838,10733,1536010950,10854,10749,15360,10886,10798,10709,15360,10910,10814,10709,1536010926,10830,10725,15360,10910,10814,10701,15360,10862,10774,10677,1536010950,10854,10733,15360,10926,10830,10717,15360,10926,10838,10725,1536010926,10830,10725,15360,10894,10798,10685,15360,10926,10830,10701,1536010958,10854,10717,15360,10934,10830,10685,15360,10950,10846,10709,1536010974,10862,10717,15360,10942,10830,10685,15360,10958,10846,10701,1536011006,10894,10749,15360,10950,10846,10725,15360,10958,10862,10741,1536010894,10806,10701,15360,10854,10774,10669,15360,10886,10806,10701,1536010862,10790,10693,15360,10878,10806,10717,15360,10982,10902,10798,1536010990,10902,10798,15360,10950,10862,10758,15360,10942,10846,10733,1536010870,10774,10669,15360,10894,10798,10693,15360,10918,10830,10725,1536010894,10806,10701,15360,10926,10830,10733,15360,10902,10830,10725,1536010870,10790,10693,15360,10886,10814,10725,15360,10814,10741,10661,1536010838,10766,10677,15360,10822,10741,10661,15360,10822,10741,10669,1536010862,10790,10709,15360,10846,10758,10669,15360,10894,10798,10693,1536010974,10878,10766,15360,10966,10870,10766,15360,11023,10926,10814,1536011079,10974,10862,15360,11006,10910,10814,15360,10950,10862,10766,1536010982,10894,10798,15360,10958,10862,10774,15360,10958,10870,10782,1536010910,10830,10741,15360,10950,10862,10766,15360,10982,10886,10790,1536010918,10822,10725,15360,10886,10798,10701,15360,10854,10766,10669,1536010894,10806,10709,15360,10926,10830,10725,15360,10926,10830,10725,1536010958,10862,10749,15360,10958,10862,10749,15360,10894,10806,10717,1536010902,10814,10717,15360,10878,10790,10677,15360,10942,10838,10717,1536010918,10814,10701,15360,10886,10790,10661,15360,10942,10838,10717,1536010950,10854,10725,15360,10950,10854,10725,15360,10910,10814,10693,1536010910,10814,10685,15360,10942,10838,10709,15360,10894,10790,10661,1536010910,10806,10669,15360,10822,10725,10597,15360,10749,10661,10541,1536010830,10733,10613,15360,10838,10741,10629,15360,10806,10709,10597,1536010854,10766,10653,15360,10862,10774,10669,15360,10798,10725,10629,1536010822,10749,10653,15360,10854,10782,10693,15360,10806,10741,10661,1536010862,10790,10701,15360,10870,10790,10685,15360,10870,10790,10693,1536010878,10790,10677,15360,10862,10782,10677,15360,10870,10790,10693,1536010870,10782,10685,15360,10894,10814,10709,15360,10886,10814,10709,1536010846,10782,10685,15360,10741,10669,10573,15360,10766,10693,10589,1536010709,10637,10541,15360,10741,10669,10589,15360,10741,10677,10589,1536010709,10637,10557,15360,10774,10701,10613,15360,10862,10774,10677,1536011006,10918,10806,15360,11006,10902,10782,15360,10974,10870,10749,1536010958,10854,10733,15360,10934,10838,10725,15360,10934,10838,10733,1536010934,10838,10725,15360,10886,10790,10685,15360,10854,10766,10661,1536010886,10798,10701,15360,10838,10749,10645,15360,10878,10782,10661,1536010822,10725,10613,15360,10822,10717,10605,15360,10846,10749,10629,1536010854,10749,10637,15360,10950,10854,10733,15360,10958,10854,10741,1536010910,10806,10693,15360,10926,10822,10693,15360,10934,10838,10725,1536010910,10822,10709,15360,10910,10822,10709,15360,10886,10782,10661,1536010910,10814,10677,15360,10910,10806,10677,15360,10926,10822,10685,1536010958,10854,10717,15360,10974,10870,10725,15360,10926,10830,10693,1536010926,10830,10693,15360,10918,10822,10693,15360,10934,10838,10701,1536010918,10814,10685,15360,10878,10782,10653,15360,10870,10774,10645,1536010838,10749,10629,15360,10806,10717,10605,15360,10822,10733,10621,1536010822,10733,10621,15360,10846,10758,10653,15360,10846,10766,10653,1536010822,10741,10629,15360,10806,10733,10629,15360,10806,10725,10621,1536010790,10709,10605,15360,10766,10693,10589,15360,10814,10741,10629,1536010846,10766,10653,15360,10838,10758,10653,15360,10878,10790,10677,1536010894,10798,10685,15360,10830,10741,10629,15360,10830,10758,10653,1536010798,10725,10629,15360,10806,10733,10629,15360,10717,10637,10525,1536010661,10581,10476,15360,10701,10621,10517,15360,10733,10661,10565,1536010782,10685,10557,15360,10862,10758,10613,15360,10974,10862,10725,1536010958,10846,10709,15360,11006,10902,10766,15360,11006,10902,10774,1536011039,10934,10814,15360,11006,10902,10790,15360,11006,10910,10790,1536010950,10854,10741,15360,10934,10830,10709,15360,10918,10814,10701,1536010854,10758,10653,15360,10918,10814,10701,15360,10870,10766,10645,1536010830,10733,10621,15360,10934,10830,10709,15360,10990,10886,10758,1536010950,10838,10717,15360,10910,10814,10701,15360,10926,10822,10693,1536010934,10830,10709,15360,10878,10774,10653,15360,10934,10830,10701,1536010926,10822,10693,15360,10878,10782,10661,15360,10878,10782,10661,1536010862,10766,10621,15360,10886,10782,10645,15360,10886,10782,10653,1536010926,10822,10701,15360,10902,10806,10685,15360,10926,10822,10701,1536010918,10814,10685,15360,10878,10782,10645,15360,10910,10806,10669,1536010854,10758,10621,15360,10886,10790,10645,15360,10854,10758,10629,1536010830,10741,10613,15360,10918,10814,10685,15360,10862,10766,10645,1536010830,10741,10613,15360,10806,10717,10597,15360,10741,10661,10557,1536010774,10693,10581,15360,10749,10669,10557,15360,10774,10693,10581,1536010766,10685,10573,15360,10790,10709,10597,15360,10782,10701,10589,1536010790,10709,10597,15360,10838,10749,10621,15360,10870,10774,10645,1536010894,10790,10661,15360,10878,10782,10653,15360,10846,10741,10613,1536010790,10693,10557,15360,10814,10717,10597,15360,10790,10701,10581,1536010741,10645,10525,15360,10717,10629,10509,15360,10774,10685,10573,1536010725,10637,10525,15360,10854,10749,10621,15360,10950,10846,10701,1536010966,10854,10709,15360,10934,10814,10677,15360,10926,10822,10701,1536010982,10878,10766,15360,10998,10894,10782,15360,10990,10878,10766,1536010998,10894,10782,15360,10998,10886,10774,15360,10998,10886,10758,1536011006,10894,10774,15360,10942,10838,10733,15360,10958,10854,10741,1536010958,10854,10749,15360,11006,10902,10790,15360,11015,10902,10798,1536010982,10870,10758,15360,10998,10894,10782,15360,10974,10870,10758,1536011006,10902,10790,15360,10998,10894,10774,15360,10974,10870,10758,1536010950,10854,10741,15360,10878,10790,10693,15360,10902,10814,10701,1536010918,10822,10709,15360,10838,10733,10613,15360,10878,10782,10661,1536010934,10838,10717,15360,10902,10806,10693,15360,10918,10822,10709,1536010926,10830,10709,15360,10838,10733,10605,15360,10910,10806,10661,1536010942,10838,10693,15360,10886,10782,10645,15360,10886,10782,10637,1536010854,10749,10621,15360,10926,10830,10709,15360,10966,10862,10741,1536010846,10749,10629,15360,10830,10733,10605,15360,10854,10758,10637,1536010822,10725,10605,15360,10886,10790,10661,15360,10902,10806,10669,1536010918,10814,10677,15360,10830,10733,10605,15360,10806,10717,10589,1536010870,10774,10645,15360,10934,10838,10709,15360,10958,10862,10733,1536010886,10790,10661,15360,10894,10798,10661,15360,10958,10854,10709,1536010934,10830,10709,15360,10814,10717,10581,15360,10862,10758,10613,1536010854,10741,10589,15360,10814,10717,10573,15360,10886,10782,10645,1536010814,10725,10597,15360,10862,10766,10637,15360,10910,10806,10669,1536010942,10838,10709,15360,10966,10862,10733,15360,10974,10870,10741,1536010974,10870,10749,15360,10958,10862,10749,15360,11031,10934,10822,1536010998,10894,10782,15360,10974,10870,10766,15360,11023,10918,10814,1536011039,10926,10822,15360,10958,10846,10741,15360,10918,10814,10693,1536010966,10870,10741,15360,10982,10886,10766,15360,10982,10878,10766,1536010942,10846,10733,15360,10958,10862,10758,15360,10950,10854,10758,1536010934,10830,10717,15360,10966,10862,10733,15360,10942,10846,10725,1536010934,10846,10733,15360,10934,10846,10733,15360,10878,10798,10693,1536010886,10798,10693,15360,10910,10814,10709,15360,10942,10846,10733,1536010838,10733,10597,15360,10878,10774,10645,15360,10918,10822,10701,1536010878,10782,10653,15360,10894,10790,10661,15360,10934,10838,10725,1536010958,10854,10725,15360,10966,10862,10733,15360,10910,10806,10685,1536010982,10878,10758,15360,10942,10854,10749,15360,10934,10838,10733,1536010918,10814,10701,15360,10894,10798,10669,15360,10894,10798,10669,1536010814,10725,10605,15360,10902,10798,10669,15360,10814,10725,10605,1536010894,10798,10685,15360,10958,10862,10749,15360,10910,10814,10701,1536010910,10806,10685,15360,10918,10814,10693,15360,10926,10822,10709,1536010894,10790,10661,15360,10902,10806,10677,15360,10902,10806,10685,1536010934,10838,10717,15360,10934,10838,10701,15360,10934,10838,10717,1536010950,10854,10725,15360,10894,10798,10661,15360,10862,10749,10597,1536010894,10798,10677,15360,10878,10782,10661,15360,10926,10838,10717,1536010926,10838,10717,15360,10918,10822,10709,15360,10934,10838,10733,1536010926,10838,10733,15360,10958,10870,10766,15360,10942,10854,10749,1536010958,10870,10774,15360,10974,10878,10774,15360,10958,10854,10741,1536010950,10846,10741,15360,10950,10854,10758,15360,10934,10838,10733,1536010942,10846,10725,15360,10966,10862,10741,15360,10926,10838,10733,1536010958,10862,10749,15360,10910,10822,10709,15360,10942,10854,10758,1536010926,10838,10733,15360,10910,10822,10717,15360,10934,10838,10733,1536010934,10846,10733,15360,10902,10814,10709,15360,10926,10830,10717,1536010918,10822,10709,15360,10838,10749,10637,15360,10878,10790,10677,1536010942,10846,10733,15360,10926,10822,10701,15360,10958,10862,10749,1536010886,10790,10685,15360,10918,10814,10693,15360,10910,10814,10693,1536010902,10806,10701,15360,10878,10774,10637,15360,10798,10693,10565,1536010822,10725,10597,15360,10934,10838,10709,15360,10958,10854,10725,1536010886,10790,10669,15360,10910,10806,10677,15360,10886,10782,10645,1536010830,10725,10597,15360,10822,10717,10581,15360,10862,10758,10637,1536010878,10782,10669,15360,10926,10822,10709,15360,10974,10878,10774,1536010966,10870,10758,15360,10918,10822,10709,15360,10846,10749,10645,1536010894,10798,10693,15360,10918,10822,10709,15360,10974,10878,10774,1536010918,10822,10717,15360,10982,10886,10774,15360,10974,10878,10758,1536010950,10854,10741,15360,10958,10854,10725,15360,10982,10886,10766,1536010918,10822,10701,15360,10878,10782,10669,15360,10886,10790,10669,1536010934,10838,10717,15360,10950,10854,10741,15360,10934,10838,10733,1536010982,10886,10782,15360,10886,10798,10701,15360,10870,10782,10685,1536010894,10814,10717,15360,10910,10822,10725,15360,10934,10838,10733,1536010950,10846,10741,15360,10934,10838,10725,15360,10934,10846,10749,1536010902,10814,10717,15360,10878,10790,10677,15360,10878,10782,10669,1536010854,10766,10645,15360,10838,10749,10629,15360,10902,10814,10701,1536010910,10814,10693,15360,10902,10798,10669,15360,10910,10806,10677,1536010886,10782,10653,15360,10854,10749,10629,15360,10870,10774,10653,1536010974,10870,10758,15360,10990,10878,10758,15360,10918,10822,10709,1536010926,10838,10725,15360,10958,10854,10733,15360,10894,10790,10653,1536010822,10725,10605,15360,10878,10782,10661,15360,10974,10870,10749,1536010902,10806,10677,15360,10934,10838,10725,15360,10870,10774,10653,1536010798,10701,10581,15360,10854,10749,10621,15360,10894,10798,10669,1536010934,10822,10685,15360,10942,10830,10701,15360,10910,10806,10669,1536010870,10758,10629,15360,10886,10774,10645,15360,10950,10838,10701,1536010966,10870,10749,15360,10886,10790,10685,15360,10870,10782,10677,1536010934,10838,10733,15360,10934,10838,10725,15360,10822,10725,10621,1536010878,10790,10677,15360,10894,10798,10693,15360,10822,10733,10629,1536010894,10798,10685,15360,10998,10902,10790,15360,11015,10918,10806,1536010950,10854,10741,15360,10950,10846,10741,15360,10934,10838,10733,1536010942,10846,10749,15360,10910,10822,10725,15360,10846,10758,10653,1536010878,10790,10685,15360,10894,10798,10701,15360,10862,10774,10669,1536010814,10725,10621,15360,10846,10758,10645,15360,10870,10774,10661,1536010870,10774,10677,15360,10878,10790,10693,15360,10878,10782,10677,1536010830,10741,10637,15360,10870,10782,10677,15360,10966,10870,10766,1536011015,10918,10814,15360,10910,10814,10701,15360,10942,10846,10725,1536010950,10846,10725,15360,10942,10838,10725,15360,10934,10830,10701,1536010910,10798,10677,15360,10886,10782,10653,15360,10838,10733,10597,1536010902,10806,10669,15360,10830,10733,10613,15360,10838,10741,10621,1536010838,10741,10621,15360,10894,10798,10669,15360,10934,10830,10685,1536010886,10790,10669,15360,10902,10806,10685,15360,10854,10749,10637,15360]);class Or{static getSimplyfiedObject(t,r){if(!(t instanceof c.Mesh||t instanceof c.Line)||!t.geometry)return t;const i=new Z3,s=this.getNumberOfVerticesToRemove(t.geometry,r);if(s>0){const o=t.clone(!0);return o.geometry=i.modify(o.geometry.clone(),s),o}return t}static getNumberOfVerticesToRemove(t,r){let i=0;t instanceof c.BufferGeometry&&t.index&&(i=t.attributes.position.count);const s=Math.floor(i*r);return i<20?0:s}}const o1=class{static createSkyOfGradientRamp(e=4e3,t=32,r=15,i=new c.Vector3){const s={topColor:{value:new c.Color(8828661)},skylineColor:{value:new c.Color(16777215)},bottomColor:{value:new c.Color(10066329)},offset:{value:400},exponent:{value:.9},skyCenter:{value:i||new c.Vector3}},o=new c.SphereGeometry(e,t,r),n=new c.ShaderMaterial({uniforms:s,vertexShader:this.vertexShader,fragmentShader:this.fragmentShader,side:c.BackSide}),a=new c.Mesh(o,n);return a.matrixAutoUpdate=!1,a.name=this.NAME,a.userData.selectable=!1,a}static createSkyOfGradientRampByObjectsInScene(e,t){if(!e)return new c.Mesh;const r=$.getObjectsBoundingBox(e,t);return o1.createSkyOfGradientRampByBoundingBox(r)}static createSkyOfGradientRampByBoundingBox(e){let t=(e.max.x-e.min.x+(e.max.y-e.min.y)+(e.max.z-e.min.z))*2;t<o1.MIN_SKY_RADIUS?t=o1.MIN_SKY_RADIUS:t>o1.MAX_SKY_RADIUS&&(t=o1.MAX_SKY_RADIUS);const r=new c.Vector3;e.getCenter(r);const i=o1.createSkyOfGradientRamp(t,void 0,void 0,r);return i.position.set(r.x,0,r.z),i}static async createSkyFromTextures(e="cloudy"){const t=new c.CubeTextureLoader;t.setPath(`images/skybox/${e}/`);const r=["right.jpg","left.jpg","top.jpg","bottom.jpg","front.jpg","back.jpg"];return new Promise((i,s)=>{t.load(r,o=>i(o))})}};let b1=o1;b1.NAME="SKYBOX",b1.MIN_SKY_RADIUS=4e3,b1.MAX_SKY_RADIUS=2e4,b1.vertexShader=`
    varying vec3 vWorldPosition;
    void main() {
      vec4 worldPosition = modelMatrix * vec4( position, 1.0 );
      vWorldPosition = worldPosition.xyz;
      gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
    }`,b1.fragmentShader=`
    uniform vec3 topColor;
    uniform vec3 skylineColor;
    uniform vec3 bottomColor;
    uniform float offset;
    uniform float exponent;
    uniform vec3 skyCenter;
    varying vec3 vWorldPosition;
    void main() {
      vec3 position = vec3(vWorldPosition.x - skyCenter.x, vWorldPosition.y - skyCenter.y, vWorldPosition.z - skyCenter.z);
      float h = normalize( position + offset ).y;
      vec3 color;
      if (h > 0.0) {
        color = mix( skylineColor, topColor, max( pow( max( h, 0.0 ), exponent ), 0.0 ) );
      } else {
        color = mix( skylineColor, bottomColor, max( pow( max( -h, 0.0 ), exponent ), 0.0 ) );
      }
      gl_FragColor = vec4(color , 1.0 );
    }`;function Mr(){const e=document.createElement("div");e.setAttribute("style","height: 1in; visibility: hidden; position: absolute; margin: 0; padding: 0;"),document.body.appendChild(e);const t=e.clientHeight;return .0254/t}const X1={file:1,m:1,mm:.001,cm:.01,ft:.3048,in:.0254,pt:Mr()},Nt={file:"m",m:"m",mm:"mm",cm:"cm",ft:"ft",in:"in",pt:"pt"},It=e=>e===2?"\xB2":e===3?"\xB3":"",H1=(e,t=1)=>Nt[e]+It(t),Pr=(e,t,r,i=1)=>(r==null&&(r=t),r===t?{value:e,unit:H1(r)}:{value:e*Math.pow(X1[t]/X1[r],i),unit:H1(r)+It(i)});function Cr(){const e={loader:new x1,count:0,textures:[],loadProgress:0,loadTextures:t,dispose:i};return e;function t(s,o){e.count=s.length,e.textures.splice(0),e.loadProgress=0,Promise.all(s.map(r)).then(o)}function r(s,o){return new Promise(n=>{e.loader.load(s.src,a=>{e.loadProgress+=1/e.count,e.textures[o]=a,n(a)})})}function i(){e.textures.forEach(s=>s.dispose())}}export{x0 as AmbientLight,C0 as BasicMaterial,ut as BokehPass,_0 as Box,Ce as BoxGeometry,L1 as BufferGeometry,E1 as Camera,k0 as Circle,Le as CircleGeometry,A1 as ComposerInjectionKey,D0 as Cone,Ge as ConeGeometry,Oe as CoordinateAxesViewport,Se as CubeCamera,$0 as CubeTexture,F0 as Cylinder,Be as CylinderGeometry,w0 as DirectionalLight,U0 as Dodecahedron,Re as DodecahedronGeometry,lt as EffectComposer,V as EffectPass,g1 as ExportUtils,_e as ExtrudeGeometry,ft as FXAAPass,ct as FbxModel,pt as FilmPass,at as GltfModel,xe as Group,gt as HalftonePass,S0 as HemisphereLight,V0 as Icosahedron,Fe as IcosahedronGeometry,rt as Image,it as InstancedMesh,E0 as LambertMaterial,X0 as Lathe,Xe as LatheGeometry,T0 as MatcapMaterial,I1 as Material,N1 as MaterialInjectionKey,wr as MaterialUtils,n1 as Mesh,f1 as MeshInjectionKey,Q as Object3D,jt as ObjectUtils,H0 as Octahedron,Ke as OctahedronGeometry,be as OrthographicCamera,E1 as PerspectiveCamera,j0 as PhongMaterial,L0 as PhysicalMaterial,W0 as Plane,Ze as PlaneGeometry,Lt as PmremUtils,O0 as PointLight,nt as Points,N0 as PointsMaterial,K0 as Polyhedron,e0 as PolyhedronGeometry,we as Raycaster,M0 as RectAreaLight,dt as RenderPass,ye as Renderer,W as RendererInjectionKey,q0 as Ring,i0 as RingGeometry,bt as SMAAPass,vt as SSAOPass,ve as Scene,j1 as SceneInjectionKey,$ as SceneUtils,B0 as ShaderMaterial,I0 as ShadowMaterial,a0 as ShapeGeometry,Or as SimplifyUtils,b1 as SkyboxUtils,Y0 as Sphere,o0 as SphereGeometry,P0 as SpotLight,st as Sprite,G0 as StandardMaterial,z0 as SubSurfaceMaterial,Z0 as Tetrahedron,d0 as TetrahedronGeometry,J0 as Text,G1 as Texture,St as TiltShiftPass,A0 as ToonMaterial,Q0 as Torus,m0 as TorusGeometry,et as TorusKnot,y0 as TorusKnotGeometry,Ct as TroisJSVuePlugin,tt as Tube,b0 as TubeGeometry,Mt as UnrealBloomPass,R0 as VideoTexture,U1 as Viewer3DUtils,pe as Views,Pt as ZoomBlurPass,u1 as applyObjectProps,J as bindObjectProp,le as bindObjectProps,P as bindProp,de as bindProps,vr as createApp,Et as decimalPrecisionRange,Pr as getLengthValueByUnit,D1 as getMatcapUrl,H1 as getUnitStr,he as lerp,ue as limit,S1 as propsValues,m1 as setFromProp,xr as showPrecisionValue,X1 as unitConversionByMeter,Nt as unitLabel,Cr as useTextures};
//# sourceMappingURL=trois.module.min.js.map
